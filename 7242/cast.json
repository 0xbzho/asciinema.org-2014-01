[[0.013365,{"lines":{"0":[["bash-3.2$                                                                                                                         ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["                                                                                                                                  ",{}]],"32":[["                                                                                                                                  ",{}]],"33":[["                                                                                                                                  ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["                                                                                                                                  ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["                                                                                                                                  ",{}]],"39":[["                                                                                                                                  ",{}]],"40":[["                                                                                                                                  ",{}]]},"cursor":{"x":10,"y":0,"visible":true}}],[3.618065,{"lines":{"0":[["bash-3.2$ l                                                                                                                       ",{}]]},"cursor":{"x":11}}],[0.007596,{"lines":{"0":[["bash-3.2$ ls                                                                                                                      ",{}]]},"cursor":{"x":12}}],[0.04761,{"cursor":{"x":0,"y":1}}],[0.003154,{"lines":{"1":[["Maria",{"fg":6,"bold":true}],["                                                                                                                             ",{}]],"2":[["bash-3.2$                                                                                                                         ",{}]]},"cursor":{"x":10,"y":2}}],[4.933978,{"lines":{"2":[["bash-3.2$ h                                                                                                                       ",{}]]},"cursor":{"x":11}}],[0.023277,{"lines":{"2":[["bash-3.2$ hi                                                                                                                      ",{}]]},"cursor":{"x":12}}],[0.06449000000000001,{"lines":{"2":[["bash-3.2$ his                                                                                                                     ",{}]]},"cursor":{"x":13}}],[0.072227,{"lines":{"2":[["bash-3.2$ hist                                                                                                                    ",{}]]},"cursor":{"x":14}}],[0.080443,{"lines":{"2":[["bash-3.2$ histo                                                                                                                   ",{}]]},"cursor":{"x":15}}],[0.110986,{"lines":{"2":[["bash-3.2$ histor                                                                                                                  ",{}]]},"cursor":{"x":16}}],[0.080327,{"lines":{"2":[["bash-3.2$ history                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.103569,{"cursor":{"x":18}}],[0.055802,{"lines":{"2":[["bash-3.2$ history |                                                                                                               ",{}]]},"cursor":{"x":19}}],[0.143857,{"cursor":{"x":20}}],[0.144827,{"lines":{"2":[["bash-3.2$ history | g                                                                                                             ",{}]]},"cursor":{"x":21}}],[0.064141,{"lines":{"2":[["bash-3.2$ history | gr                                                                                                            ",{}]]},"cursor":{"x":22}}],[0.047987,{"lines":{"2":[["bash-3.2$ history | gre                                                                                                           ",{}]]},"cursor":{"x":23}}],[0.024297,{"lines":{"2":[["bash-3.2$ history | grep                                                                                                          ",{}]]},"cursor":{"x":24}}],[0.135595,{"cursor":{"x":25}}],[0.367996,{"lines":{"2":[["bash-3.2$ history | grep r                                                                                                        ",{}]]},"cursor":{"x":26}}],[0.095903,{"lines":{"2":[["bash-3.2$ history | grep ro                                                                                                       ",{}]]},"cursor":{"x":27}}],[0.127395,{"lines":{"2":[["bash-3.2$ history | grep roo                                                                                                      ",{}]]},"cursor":{"x":28}}],[0.007986,{"lines":{"2":[["bash-3.2$ history | grep root                                                                                                     ",{}]]},"cursor":{"x":29}}],[0.463935,{"cursor":{"x":0,"y":3}}],[0.006495,{"lines":{"3":[["  500  ssh root@192.241.163.59                                                                                                    ",{}]],"4":[["  502  history | grep root                                                                                                        ",{}]],"5":[["bash-3.2$                                                                                                                         ",{}]]},"cursor":{"x":10,"y":5}}],[0.897468,{"lines":{"5":[["bash-3.2$ s                                                                                                                       ",{}]]},"cursor":{"x":11}}],[0.15286,{"lines":{"5":[["bash-3.2$ ss                                                                                                                      ",{}]]},"cursor":{"x":12}}],[0.072049,{"lines":{"5":[["bash-3.2$ ssh                                                                                                                     ",{}]]},"cursor":{"x":13}}],[0.119722,{"cursor":{"x":14}}],[0.127805,{"lines":{"5":[["bash-3.2$ ssh r                                                                                                                   ",{}]]},"cursor":{"x":15}}],[0.024779,{"lines":{"5":[["bash-3.2$ ssh ro                                                                                                                  ",{}]]},"cursor":{"x":16}}],[0.143596,{"lines":{"5":[["bash-3.2$ ssh roo                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.112019,{"lines":{"5":[["bash-3.2$ ssh root                                                                                                                ",{}]]},"cursor":{"x":18}}],[0.247515,{"lines":{"5":[["bash-3.2$ ssh root@                                                                                                               ",{}]]},"cursor":{"x":19}}],[0.639962,{"lines":{"5":[["bash-3.2$ ssh root@9                                                                                                              ",{}]]},"cursor":{"x":20}}],[0.265196,{"lines":{"5":[["bash-3.2$ ssh root@                                                                                                               ",{}]]},"cursor":{"x":19}}],[0.023055,{"lines":{"5":[["bash-3.2$ ssh root@1                                                                                                              ",{}]]},"cursor":{"x":20}}],[0.104064,{"lines":{"5":[["bash-3.2$ ssh root@19                                                                                                             ",{}]]},"cursor":{"x":21}}],[0.143588,{"lines":{"5":[["bash-3.2$ ssh root@192                                                                                                            ",{}]]},"cursor":{"x":22}}],[0.520293,{"lines":{"5":[["bash-3.2$ ssh root@192.                                                                                                           ",{}]]},"cursor":{"x":23}}],[0.768031,{"lines":{"5":[["bash-3.2$ ssh root@192.2                                                                                                          ",{}]]},"cursor":{"x":24}}],[0.040884,{"lines":{"5":[["bash-3.2$ ssh root@192.24                                                                                                         ",{}]]},"cursor":{"x":25}}],[0.15944,{"lines":{"5":[["bash-3.2$ ssh root@192.241                                                                                                        ",{}]]},"cursor":{"x":26}}],[0.09561600000000001,{"lines":{"5":[["bash-3.2$ ssh root@192.241.                                                                                                       ",{}]]},"cursor":{"x":27}}],[0.655149,{"lines":{"5":[["bash-3.2$ ssh root@192.241.1                                                                                                      ",{}]]},"cursor":{"x":28}}],[0.416855,{"lines":{"5":[["bash-3.2$ ssh root@192.241.16                                                                                                     ",{}]]},"cursor":{"x":29}}],[0.32017,{"lines":{"5":[["bash-3.2$ ssh root@192.241.163                                                                                                    ",{}]]},"cursor":{"x":30}}],[0.103841,{"lines":{"5":[["bash-3.2$ ssh root@192.241.163.                                                                                                   ",{}]]},"cursor":{"x":31}}],[1.144192,{"lines":{"5":[["bash-3.2$ ssh root@192.241.163.5                                                                                                  ",{}]]},"cursor":{"x":32}}],[0.055125,{"lines":{"5":[["bash-3.2$ ssh root@192.241.163.59                                                                                                 ",{}]]},"cursor":{"x":33}}],[0.192665,{"cursor":{"x":0,"y":6}}],[2.098011,{"lines":{"6":[["Welcome to Ubuntu 12.04.3 LTS (GNU/Linux 3.8.0-29-generic x86_64)                                                                 ",{}]],"8":[[" * Documentation:  https://help.ubuntu.com/                                                                                       ",{}]],"10":[["  System information as of Fri Jan 17 22:38:40 EST 2014                                                                           ",{}]],"12":[["  System load:  0.0                Processes:           84                                                                        ",{}]],"13":[["  Usage of /:   16.6% of 19.56GB   Users logged in:     1                                                                         ",{}]],"14":[["  Memory usage: 53%                IP address for eth0: 192.241.163.59                                                            ",{}]],"15":[["  Swap usage:   0%                                                                                                                ",{}]],"17":[["  Graph this data and manage this system at https://landscape.canonical.com/                                                      ",{}]],"19":[["74 packages can be updated.                                                                                                       ",{}]],"20":[["28 updates are security updates.                                                                                                  ",{}]],"22":[["*** System restart required ***                                                                                                   ",{}]],"23":[["Last login: Fri Jan 17 21:27:55 2014 from 76.14.61.80                                                                             ",{}]]},"cursor":{"y":24}}],[0.411103,{"lines":{"24":[["root@kielian:~#                                                                                                                   ",{}]]},"cursor":{"x":16}}],[0.791188,{"lines":{"24":[["root@kielian:~# l                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.035556,{"lines":{"24":[["root@kielian:~# ls                                                                                                                ",{}]]},"cursor":{"x":18}}],[0.093372,{"cursor":{"x":0,"y":25}}],[0.001727,{"lines":{"25":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"26":[["root@kielian:~#                                                                                                                   ",{}]]},"cursor":{"x":16,"y":26}}],[3.496968,{"lines":{"26":[["root@kielian:~# l                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.091929,{"lines":{"26":[["root@kielian:~# ls                                                                                                                ",{}]]},"cursor":{"x":18}}],[0.057322,{"cursor":{"x":0,"y":27}}],[0.002159,{"lines":{"27":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"28":[["root@kielian:~#                                                                                                                   ",{}]]},"cursor":{"x":16,"y":28}}],[0.857247,{"lines":{"28":[["root@kielian:~# c                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.035876,{"lines":{"28":[["root@kielian:~# cd                                                                                                                ",{}]]},"cursor":{"x":18}}],[0.083749,{"cursor":{"x":19}}],[0.143486,{"lines":{"28":[["root@kielian:~# cd l                                                                                                              ",{}]]},"cursor":{"x":20}}],[0.548825,{"lines":{"28":[["root@kielian:~# cd lr                                                                                                             ",{}]]},"cursor":{"x":21}}],[0.051432,{"lines":{"28":[["root@kielian:~# cd lrn                                                                                                            ",{}]]},"cursor":{"x":22}}],[0.092152,{"lines":{"29":[["-bash: cd: lrn: No such file or directory                                                                                         ",{}]],"30":[["root@kielian:~#                                                                                                                   ",{}]]},"cursor":{"x":16,"y":30}}],[0.223881,{"lines":{"30":[["root@kielian:~# l                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.01992,{"lines":{"30":[["root@kielian:~# ls                                                                                                                ",{}]]},"cursor":{"x":18}}],[0.093306,{"cursor":{"x":0,"y":31}}],[0.001366,{"lines":{"31":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"32":[["root@kielian:~#                                                                                                                   ",{}]]},"cursor":{"x":16,"y":32}}],[0.725081,{"lines":{"32":[["root@kielian:~# l                                                                                                                 ",{}]]},"cursor":{"x":17}}],[0.104222,{"lines":{"32":[["root@kielian:~# lr                                                                                                                ",{}]]},"cursor":{"x":18}}],[0.055751,{"lines":{"32":[["root@kielian:~# lrn                                                                                                               ",{}]]},"cursor":{"x":19}}],[0.085577,{"lines":{"33":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]]},"cursor":{"x":34,"y":33}}],[0.198845,{"lines":{"33":[["root@kielian:~/node/learnyounode# l                                                                                               ",{}]]},"cursor":{"x":35}}],[0.069479,{"lines":{"33":[["root@kielian:~/node/learnyounode# ls                                                                                              ",{}]]},"cursor":{"x":36}}],[0.039419,{"cursor":{"x":0,"y":34}}],[0.002593,{"lines":{"34":[["00_hello_node.js  01_BABY_STEPS.js  level3.md                                                                                     ",{}]],"35":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]]},"cursor":{"x":34,"y":35}}],[1.989236,{"lines":{"35":[["root@kielian:~/node/learnyounode# c                                                                                               ",{}]]},"cursor":{"x":35}}],[0.075671,{"lines":{"35":[["root@kielian:~/node/learnyounode# ca                                                                                              ",{}]]},"cursor":{"x":36}}],[0.119122,{"lines":{"35":[["root@kielian:~/node/learnyounode# cat                                                                                             ",{}]]},"cursor":{"x":37}}],[0.080556,{"cursor":{"x":38}}],[0.12254,{"lines":{"35":[["root@kielian:~/node/learnyounode# cat l                                                                                           ",{}]]},"cursor":{"x":39}}],[0.078084,{"lines":{"35":[["root@kielian:~/node/learnyounode# cat le                                                                                          ",{}]]},"cursor":{"x":40}}],[0.171195,{"lines":{"35":[["root@kielian:~/node/learnyounode# cat level3.md                                                                                   ",{}]]},"cursor":{"x":48}}],[0.111005,{"cursor":{"x":0,"y":37}}],[0.001902,{"lines":{"0":[["Maria",{"fg":6,"bold":true}],["                                                                                                                             ",{}]],"1":[["bash-3.2$ history | grep root                                                                                                     ",{}]],"2":[["  500  ssh root@192.241.163.59                                                                                                    ",{}]],"3":[["  502  history | grep root                                                                                                        ",{}]],"4":[["bash-3.2$ ssh root@192.241.163.59                                                                                                 ",{}]],"5":[["Welcome to Ubuntu 12.04.3 LTS (GNU/Linux 3.8.0-29-generic x86_64)                                                                 ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[[" * Documentation:  https://help.ubuntu.com/                                                                                       ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["  System information as of Fri Jan 17 22:38:40 EST 2014                                                                           ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["  System load:  0.0                Processes:           84                                                                        ",{}]],"12":[["  Usage of /:   16.6% of 19.56GB   Users logged in:     1                                                                         ",{}]],"13":[["  Memory usage: 53%                IP address for eth0: 192.241.163.59                                                            ",{}]],"14":[["  Swap usage:   0%                                                                                                                ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["  Graph this data and manage this system at https://landscape.canonical.com/                                                      ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["74 packages can be updated.                                                                                                       ",{}]],"19":[["28 updates are security updates.                                                                                                  ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["*** System restart required ***                                                                                                   ",{}]],"22":[["Last login: Fri Jan 17 21:27:55 2014 from 76.14.61.80                                                                             ",{}]],"23":[["root@kielian:~# ls                                                                                                                ",{}]],"24":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"25":[["root@kielian:~# ls                                                                                                                ",{}]],"26":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"27":[["root@kielian:~# cd lrn                                                                                                            ",{}]],"28":[["-bash: cd: lrn: No such file or directory                                                                                         ",{}]],"29":[["root@kielian:~# ls                                                                                                                ",{}]],"30":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"31":[["root@kielian:~# lrn                                                                                                               ",{}]],"32":[["root@kielian:~/node/learnyounode# ls                                                                                              ",{}]],"33":[["00_hello_node.js  01_BABY_STEPS.js  level3.md                                                                                     ",{}]],"34":[["root@kielian:~/node/learnyounode# cat level3.md                                                                                   ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["  #####################################################################                                                           ",{}]],"37":[["  ##                      ",{}],["~~  MY FIRST I/O!  ~~",{"fg":3,"bold":true}],["                      ##                                                           ",{}]],"38":[["  #####################################################################                                                           ",{}]],"40":[["Write a program that uses a single ",{}],["synchronous",{"bold":true}],[" filesystem operation to                                                            ",{}]]},"cursor":{"x":70,"y":40}}],[0.080285,{"lines":{"0":[["  Usage of /:   16.6% of 19.56GB   Users logged in:     1                                                                         ",{}]],"1":[["  Memory usage: 53%                IP address for eth0: 192.241.163.59                                                            ",{}]],"2":[["  Swap usage:   0%                                                                                                                ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["  Graph this data and manage this system at https://landscape.canonical.com/                                                      ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["74 packages can be updated.                                                                                                       ",{}]],"7":[["28 updates are security updates.                                                                                                  ",{}]],"9":[["*** System restart required ***                                                                                                   ",{}]],"10":[["Last login: Fri Jan 17 21:27:55 2014 from 76.14.61.80                                                                             ",{}]],"11":[["root@kielian:~# ls                                                                                                                ",{}]],"12":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"13":[["root@kielian:~# ls                                                                                                                ",{}]],"14":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"15":[["root@kielian:~# cd lrn                                                                                                            ",{}]],"16":[["-bash: cd: lrn: No such file or directory                                                                                         ",{}]],"17":[["root@kielian:~# ls                                                                                                                ",{}]],"18":[["02_instructions.md  02_instructions.txt  hello.js  ",{}],["maximum-awesome-squared",{"fg":4,"bold":true}],["  ",{}],["node",{"fg":4,"bold":true}],["  ",{}],["oliver-dotfiles-maximum",{"fg":4,"bold":true}],["  ",{}],["tmp",{"fg":4,"bold":true}],["                    ",{}]],"19":[["root@kielian:~# lrn                                                                                                               ",{}]],"20":[["root@kielian:~/node/learnyounode# ls                                                                                              ",{}]],"21":[["00_hello_node.js  01_BABY_STEPS.js  level3.md                                                                                     ",{}]],"22":[["root@kielian:~/node/learnyounode# cat level3.md                                                                                   ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["  #####################################################################                                                           ",{}]],"25":[["  ##                      ",{}],["~~  MY FIRST I/O!  ~~",{"fg":3,"bold":true}],["                      ##                                                           ",{}]],"26":[["  #####################################################################                                                           ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["Write a program that uses a single ",{}],["synchronous",{"bold":true}],[" filesystem operation to                                                            ",{}]],"29":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"30":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"31":[["                                                                                                                                  ",{}]],"32":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"33":[["command-line argument.                                                                                                            ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["----------------------------------------------------------------------                                                            ",{}]],"36":[["HINTS:                                                                                                                            ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"39":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"40":[["other \"global\" module, use the following incantation:                                                                             ",{}]]},"cursor":{"x":53}}],[0.001541,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"2":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"3":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["  var fs = require('fs')                                                                                                          ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"9":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"10":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"11":[["`fs.readFileSync('/path/to/file')`. This method will return a                                                                     ",{}]],"12":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"15":[["here:                                                                                                                             ",{}]],"16":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"19":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"20":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"21":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"24":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"27":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"28":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"29":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["----------------------------------------------------------------------                                                            ",{}]],"32":[["                                                                                                                                  ",{}]],"33":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"34":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"35":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"36":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"37":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"38":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"39":[["                                                                                                                                  ",{}]],"40":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]]},"cursor":{"x":34}}],[94.482426,{"lines":{"40":[["root@kielian:~/node/learnyounode# cat level3.md                                                                                   ",{}]]},"cursor":{"x":48}}],[1.812574,{"lines":{"40":[["root@kielian:~/node/learnyounode# cat level3.md |                                                                                 ",{}]]},"cursor":{"x":49}}],[0.439714,{"cursor":{"x":50}}],[0.172359,{"lines":{"40":[["root@kielian:~/node/learnyounode# cat level3.md | l                                                                               ",{}]]},"cursor":{"x":51}}],[0.347793,{"lines":{"40":[["root@kielian:~/node/learnyounode# cat level3.md | le                                                                              ",{}]]},"cursor":{"x":52}}],[0.043891,{"lines":{"40":[["root@kielian:~/node/learnyounode# cat level3.md | les                                                                             ",{}]]},"cursor":{"x":53}}],[0.131752,{"lines":{"40":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]]},"cursor":{"x":54}}],[0.686625,{"lines":{"1":[["                                                                                                                                  ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["                                                                                                                                  ",{}]],"5":[["                                                                                                                                  ",{}]],"7":[["                                                                                                                                  ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["                                                                                                                                  ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["                                                                                                                                  ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["                                                                                                                                  ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["                                                                                                                                  ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["                                                                                                                                  ",{}]],"31":[["                                                                                                                                  ",{}]],"33":[["                                                                                                                                  ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["                                                                                                                                  ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["                                                                                                                                  ",{}]],"40":[["  #####################################################################                                                           ",{}]]},"cursor":{"x":71}}],[0.001273,{"lines":{"36":[["  #####################################################################                                                           ",{}]],"37":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"38":[["  #####################################################################                                                           ",{}]],"40":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]]},"cursor":{"x":83}}],[0.085052,{"lines":{"24":[["  #####################################################################                                                           ",{}]],"25":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"26":[["  #####################################################################                                                           ",{}]],"28":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"29":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"30":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"32":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"33":[["command-line argument.                                                                                                            ",{}]],"35":[["----------------------------------------------------------------------                                                            ",{}]],"36":[["HINTS:                                                                                                                            ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"39":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"40":[["other \"global\" module, use the following incantation:                                                                             ",{}]]},"cursor":{"x":53}}],[0.000621,{"lines":{"1":[["  #####################################################################                                                           ",{}]],"2":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"3":[["  #####################################################################                                                           ",{}]],"5":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"6":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"7":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"9":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"10":[["command-line argument.                                                                                                            ",{}]],"12":[["----------------------------------------------------------------------                                                            ",{}]],"13":[["HINTS:                                                                                                                            ",{}]],"15":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"16":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"17":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"19":[["  var fs = require('fs')                                                                                                          ",{}]],"21":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"23":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"24":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"25":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"26":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"28":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"29":[["here:                                                                                                                             ",{}]],"30":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"32":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"33":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"34":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"35":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"36":[["                                                                                                                                  ",{}]],"37":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"38":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"39":[["                                                                                                                                  ",{}]],"40":[[":                                                                                                                                 ",{}]]},"cursor":{"x":1}}],[0.815239,{"lines":{"0":[["  #####################################################################                                                           ",{}]],"1":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"2":[["  #####################################################################                                                           ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"5":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"6":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"9":[["command-line argument.                                                                                                            ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["----------------------------------------------------------------------                                                            ",{}]],"12":[["HINTS:                                                                                                                            ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"15":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"16":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["  var fs = require('fs')                                                                                                          ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"23":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"24":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"25":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"28":[["here:                                                                                                                             ",{}]],"29":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"32":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"33":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"34":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"37":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"38":[["                                                                                                                                  ",{}]],"39":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]]}}],[0.20004,{"lines":{"0":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"1":[["  #####################################################################                                                           ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"4":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"5":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"8":[["command-line argument.                                                                                                            ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["----------------------------------------------------------------------                                                            ",{}]],"11":[["HINTS:                                                                                                                            ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"14":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"15":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["  var fs = require('fs')                                                                                                          ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"22":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"23":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"24":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"27":[["here:                                                                                                                             ",{}]],"28":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"31":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"32":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"33":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"36":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"39":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]]}}],[0.184081,{"lines":{"0":[["  #####################################################################                                                           ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"3":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"4":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"7":[["command-line argument.                                                                                                            ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["----------------------------------------------------------------------                                                            ",{}]],"10":[["HINTS:                                                                                                                            ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"13":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"14":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["  var fs = require('fs')                                                                                                          ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"21":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"22":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"23":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"26":[["here:                                                                                                                             ",{}]],"27":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"30":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"31":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"32":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"33":[["                                                                                                                                  ",{}]],"34":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"35":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"36":[["                                                                                                                                  ",{}]],"37":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"38":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"39":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]]}}],[0.311704,{"lines":{"0":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"1":[["  #####################################################################                                                           ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"4":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"5":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"8":[["command-line argument.                                                                                                            ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["----------------------------------------------------------------------                                                            ",{}]],"11":[["HINTS:                                                                                                                            ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"14":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"15":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["  var fs = require('fs')                                                                                                          ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"22":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"23":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"24":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"27":[["here:                                                                                                                             ",{}]],"28":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"31":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"32":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"33":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"36":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"39":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]]}}],[0.192097,{"lines":{"0":[["  #####################################################################                                                           ",{}]],"1":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"2":[["  #####################################################################                                                           ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"5":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"6":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"9":[["command-line argument.                                                                                                            ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["----------------------------------------------------------------------                                                            ",{}]],"12":[["HINTS:                                                                                                                            ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"15":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"16":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["  var fs = require('fs')                                                                                                          ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"23":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"24":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"25":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"28":[["here:                                                                                                                             ",{}]],"29":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"32":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"33":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"34":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"37":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"38":[["                                                                                                                                  ",{}]],"39":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]]}}],[1.274851,{"lines":{"0":[["  ##                      ",{}],["ESC",{"inverse":true}],["[33m",{}],["ESC",{"inverse":true}],["[1m~~  MY FIRST I/O!  ~~",{}],["ESC",{"inverse":true}],["[22m",{}],["ESC",{"inverse":true}],["[39m                      ##                                ",{}]],"1":[["  #####################################################################                                                           ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"4":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"5":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"8":[["command-line argument.                                                                                                            ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["----------------------------------------------------------------------                                                            ",{}]],"11":[["HINTS:                                                                                                                            ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"14":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"15":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["  var fs = require('fs')                                                                                                          ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"22":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"23":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"24":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"27":[["here:                                                                                                                             ",{}]],"28":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"31":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"32":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"33":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"36":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"39":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]]}}],[0.133588,{"lines":{"0":[["  #####################################################################                                                           ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"3":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"4":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"7":[["command-line argument.                                                                                                            ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["----------------------------------------------------------------------                                                            ",{}]],"10":[["HINTS:                                                                                                                            ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"13":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"14":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["  var fs = require('fs')                                                                                                          ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"21":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"22":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"23":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"26":[["here:                                                                                                                             ",{}]],"27":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"30":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"31":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"32":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"33":[["                                                                                                                                  ",{}]],"34":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"35":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"36":[["                                                                                                                                  ",{}]],"37":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"38":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"39":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]]}}],[0.173655,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"2":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"3":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"6":[["command-line argument.                                                                                                            ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["----------------------------------------------------------------------                                                            ",{}]],"9":[["HINTS:                                                                                                                            ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"12":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"13":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["  var fs = require('fs')                                                                                                          ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"20":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"21":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"22":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"25":[["here:                                                                                                                             ",{}]],"26":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"29":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"30":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"31":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"32":[["                                                                                                                                  ",{}]],"33":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"34":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"37":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"38":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"39":[["with an array that has one more element than the number of newlines.                                                              ",{}]]}}],[0.198985,{"lines":{"0":[["Write a program that uses a single ",{}],["ESC",{"inverse":true}],["[1msynchronous",{}],["ESC",{"inverse":true}],["[22m filesystem operation to                                               ",{}]],"1":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"2":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"5":[["command-line argument.                                                                                                            ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["----------------------------------------------------------------------                                                            ",{}]],"8":[["HINTS:                                                                                                                            ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"11":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"12":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["  var fs = require('fs')                                                                                                          ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"19":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"20":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"21":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"24":[["here:                                                                                                                             ",{}]],"25":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"28":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"29":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"30":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"31":[["                                                                                                                                  ",{}]],"32":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"33":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"36":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"37":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"38":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"39":[["                                                                                                                                  ",{}]]}}],[0.194751,{"lines":{"0":[["read a file and print the number of newlines it contains to the                                                                   ",{}]],"1":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"4":[["command-line argument.                                                                                                            ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["----------------------------------------------------------------------                                                            ",{}]],"7":[["HINTS:                                                                                                                            ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"10":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"11":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["  var fs = require('fs')                                                                                                          ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"18":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"19":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"20":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"23":[["here:                                                                                                                             ",{}]],"24":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"27":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"28":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"29":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"32":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"33":[["                                                                                                                                  ",{}]],"34":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"35":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"36":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"37":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"38":[["                                                                                                                                  ",{}]],"39":[["----------------------------------------------------------------------                                                            ",{}]]}}],[0.187808,{"lines":{"0":[["console (stdout), similar to running `cat file | wc -l`.                                                                          ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"3":[["command-line argument.                                                                                                            ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["----------------------------------------------------------------------                                                            ",{}]],"6":[["HINTS:                                                                                                                            ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"9":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"10":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["  var fs = require('fs')                                                                                                          ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"17":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"18":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"19":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"22":[["here:                                                                                                                             ",{}]],"23":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"26":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"27":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"28":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"31":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"32":[["                                                                                                                                  ",{}]],"33":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"34":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"35":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"36":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"37":[["                                                                                                                                  ",{}]],"38":[["----------------------------------------------------------------------                                                            ",{}]],"39":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]]}}],[0.195986,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"2":[["command-line argument.                                                                                                            ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["----------------------------------------------------------------------                                                            ",{}]],"5":[["HINTS:                                                                                                                            ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"8":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"9":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["  var fs = require('fs')                                                                                                          ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"16":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"17":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"18":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"21":[["here:                                                                                                                             ",{}]],"22":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"25":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"26":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"27":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"30":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"31":[["                                                                                                                                  ",{}]],"32":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"33":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"34":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"35":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"36":[["                                                                                                                                  ",{}]],"37":[["----------------------------------------------------------------------                                                            ",{}]],"38":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"39":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]]}}],[0.192285,{"lines":{"0":[["The full path to the file to read will be provided as the first                                                                   ",{}]],"1":[["command-line argument.                                                                                                            ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["----------------------------------------------------------------------                                                            ",{}]],"4":[["HINTS:                                                                                                                            ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"7":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"8":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["  var fs = require('fs')                                                                                                          ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"15":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"16":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"17":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"20":[["here:                                                                                                                             ",{}]],"21":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"24":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"25":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"26":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"29":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"32":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"33":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"34":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"35":[["                                                                                                                                  ",{}]],"36":[["----------------------------------------------------------------------                                                            ",{}]],"37":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"38":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]],"39":[["ESC",{"inverse":true}],["[1m » To execute your program in a test environment, run:                                                                      ",{}]]}}],[0.18724,{"lines":{"0":[["command-line argument.                                                                                                            ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["----------------------------------------------------------------------                                                            ",{}]],"3":[["HINTS:                                                                                                                            ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"6":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"7":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["  var fs = require('fs')                                                                                                          ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"14":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"15":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"16":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"19":[["here:                                                                                                                             ",{}]],"20":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"23":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"24":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"25":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"28":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"31":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"32":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"33":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"34":[["                                                                                                                                  ",{}]],"35":[["----------------------------------------------------------------------                                                            ",{}]],"36":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"37":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]],"38":[["ESC",{"inverse":true}],["[1m » To execute your program in a test environment, run:                                                                      ",{}]],"39":[["   `learnyounode run program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                                                          ",{}]]}}],[0.200455,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["----------------------------------------------------------------------                                                            ",{}]],"2":[["HINTS:                                                                                                                            ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"5":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"6":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["  var fs = require('fs')                                                                                                          ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"13":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"14":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"15":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"18":[["here:                                                                                                                             ",{}]],"19":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"22":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"23":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"24":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"27":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"30":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"31":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"32":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"33":[["                                                                                                                                  ",{}]],"34":[["----------------------------------------------------------------------                                                            ",{}]],"35":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"36":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]],"37":[["ESC",{"inverse":true}],["[1m » To execute your program in a test environment, run:                                                                      ",{}]],"38":[["   `learnyounode run program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                                                          ",{}]],"39":[["ESC",{"inverse":true}],["[1m » To verify your program, run: `learnyounode verify program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                    ",{}]]}}],[0.183891,{"lines":{"0":[["----------------------------------------------------------------------                                                            ",{}]],"1":[["HINTS:                                                                                                                            ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"4":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"5":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["  var fs = require('fs')                                                                                                          ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"12":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"13":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"14":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"17":[["here:                                                                                                                             ",{}]],"18":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"21":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"22":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"23":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"26":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"29":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"30":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"31":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"32":[["                                                                                                                                  ",{}]],"33":[["----------------------------------------------------------------------                                                            ",{}]],"34":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"35":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]],"36":[["ESC",{"inverse":true}],["[1m » To execute your program in a test environment, run:                                                                      ",{}]],"37":[["   `learnyounode run program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                                                          ",{}]],"38":[["ESC",{"inverse":true}],["[1m » To verify your program, run: `learnyounode verify program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                    ",{}]],"39":[["ESC",{"inverse":true}],["[1m » For help with this problem or with learnyounode, run:                                                                    ",{}]]}}],[0.196335,{"lines":{"0":[["HINTS:                                                                                                                            ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"3":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"4":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["  var fs = require('fs')                                                                                                          ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"11":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"12":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"13":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"16":[["here:                                                                                                                             ",{}]],"17":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"20":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"21":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"22":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"25":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"28":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"29":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"30":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"31":[["                                                                                                                                  ",{}]],"32":[["----------------------------------------------------------------------                                                            ",{}]],"33":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"34":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]],"35":[["ESC",{"inverse":true}],["[1m » To execute your program in a test environment, run:                                                                      ",{}]],"36":[["   `learnyounode run program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                                                          ",{}]],"37":[["ESC",{"inverse":true}],["[1m » To verify your program, run: `learnyounode verify program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                    ",{}]],"38":[["ESC",{"inverse":true}],["[1m » For help with this problem or with learnyounode, run:                                                                    ",{}]],"39":[["   `learnyounode help`.",{}],["ESC",{"inverse":true}],["[22m                                                                                                    ",{}]]}}],[0.891636,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"2":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"3":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["  var fs = require('fs')                                                                                                          ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"10":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"11":[["`fs.readFileSync('/path/to/file')`. This method will ",{}],["ESC",{"inverse":true}],["[3mreturn",{}],["ESC",{"inverse":true}],["[23m a                                                        ",{}]],"12":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"15":[["here:                                                                                                                             ",{}]],"16":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"19":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"20":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"21":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"24":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"25":[["                                                                                                                                  ",{}]],"26":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"27":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"28":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"29":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[["----------------------------------------------------------------------                                                            ",{}]],"32":[["ESC",{"inverse":true}],["[1m                                                                                                                            ",{}]],"33":[[" » To print these instructions again, run: `learnyounode print`.",{}],["ESC",{"inverse":true}],["[22m                                                           ",{}]],"34":[["ESC",{"inverse":true}],["[1m » To execute your program in a test environment, run:                                                                      ",{}]],"35":[["   `learnyounode run program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                                                          ",{}]],"36":[["ESC",{"inverse":true}],["[1m » To verify your program, run: `learnyounode verify program.js`.",{}],["ESC",{"inverse":true}],["[22m                                                    ",{}]],"37":[["ESC",{"inverse":true}],["[1m » For help with this problem or with learnyounode, run:                                                                    ",{}]],"38":[["   `learnyounode help`.",{}],["ESC",{"inverse":true}],["[22m                                                                                                    ",{}]],"39":[["                                                                                                                                  ",{}]]}}],[0.169393,{"lines":{"40":[["(END)",{"inverse":true}],["                                                                                                                             ",{}]]},"cursor":{"x":5}}],[0.14349,{}],[52.405962,{"lines":{"0":[["To perform a filesystem operation you are going to need the `fs`                                                                  ",{}]],"1":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"2":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["  var fs = require('fs')                                                                                                          ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"9":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"10":[["`fs.readFileSync('/path/to/file')`. This method will return a                                                                     ",{}]],"11":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"12":[["                                                                                                                                  ",{}]],"13":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"14":[["here:                                                                                                                             ",{}]],"15":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"16":[["                                                                                                                                  ",{}]],"17":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"18":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"19":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"20":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"23":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"26":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"27":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"28":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[["----------------------------------------------------------------------                                                            ",{}]],"31":[["                                                                                                                                  ",{}]],"32":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"33":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"34":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"35":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"36":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"37":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"38":[["                                                                                                                                  ",{}]],"39":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"40":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]]},"cursor":{"x":34}}],[0.387357,{"lines":{"0":[["module from the Node core library. To load this kind of module, or any                                                            ",{}]],"1":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["  var fs = require('fs')                                                                                                          ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"8":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"9":[["`fs.readFileSync('/path/to/file')`. This method will return a                                                                     ",{}]],"10":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"13":[["here:                                                                                                                             ",{}]],"14":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"15":[["                                                                                                                                  ",{}]],"16":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"17":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"18":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"19":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"20":[["                                                                                                                                  ",{}]],"21":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"22":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"23":[["                                                                                                                                  ",{}]],"24":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"25":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"26":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"27":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[["----------------------------------------------------------------------                                                            ",{}]],"30":[["                                                                                                                                  ",{}]],"31":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"32":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"33":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"34":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"35":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"36":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"37":[["                                                                                                                                  ",{}]],"38":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"39":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]]}}],[25.361809,{"lines":{"40":[["root@kielian:~/node/learnyounode# e                                                                                               ",{}]]},"cursor":{"x":35}}],[0.129994,{"lines":{"40":[["root@kielian:~/node/learnyounode# ex                                                                                              ",{}]]},"cursor":{"x":36}}],[0.08866599999999999,{"lines":{"40":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]]},"cursor":{"x":37}}],[0.162074,{"lines":{"0":[["other \"global\" module, use the following incantation:                                                                             ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["  var fs = require('fs')                                                                                                          ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"7":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"8":[["`fs.readFileSync('/path/to/file')`. This method will return a                                                                     ",{}]],"9":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"12":[["here:                                                                                                                             ",{}]],"13":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"16":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"17":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"18":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"19":[["                                                                                                                                  ",{}]],"20":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"21":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"24":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"25":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"26":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"27":[["                                                                                                                                  ",{}]],"28":[["----------------------------------------------------------------------                                                            ",{}]],"29":[["                                                                                                                                  ",{}]],"30":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"31":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"32":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"33":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"34":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"35":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"36":[["                                                                                                                                  ",{}]],"37":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"38":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"39":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"40":[["                                                                                                                                  ",{}]]},"cursor":{"x":0}}],[0.447273,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["  var fs = require('fs')                                                                                                          ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["Now you have the full `fs` module available in a variable named `fs`.                                                             ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"6":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"7":[["`fs.readFileSync('/path/to/file')`. This method will return a                                                                     ",{}]],"8":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"11":[["here:                                                                                                                             ",{}]],"12":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"15":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"16":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"17":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"18":[["                                                                                                                                  ",{}]],"19":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"20":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"21":[["                                                                                                                                  ",{}]],"22":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"23":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"24":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"25":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"26":[["                                                                                                                                  ",{}]],"27":[["----------------------------------------------------------------------                                                            ",{}]],"28":[["                                                                                                                                  ",{}]],"29":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"30":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"31":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"32":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"33":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"34":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"35":[["                                                                                                                                  ",{}]],"36":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"37":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"38":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"39":[["No command 'exi' found, did you mean:                                                                                             ",{}]]}}],[0.002269,{"lines":{"1":[["All synchronous (or blocking) filesystem methods in the `fs` module                                                               ",{}]],"2":[["end with 'Sync'. To read a file, you'll need to use                                                                               ",{}]],"3":[["`fs.readFileSync('/path/to/file')`. This method will return a                                                                     ",{}]],"4":[["`Buffer` object containing the complete contents of the file.                                                                     ",{}]],"5":[["                                                                                                                                  ",{}]],"6":[["Documentation on the `fs` module can be found by pointing your browser                                                            ",{}]],"7":[["here:                                                                                                                             ",{}]],"8":[["  /usr/lib/node_modules/learnyounode/node_apidoc/fs.html                                                                          ",{}]],"10":[["`Buffer` objects are Node's way of efficiently representing arbitrary                                                             ",{}]],"11":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"12":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"13":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"14":[["                                                                                                                                  ",{}]],"15":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"16":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"17":[["                                                                                                                                  ",{}]],"18":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"19":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"20":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"21":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"22":[["                                                                                                                                  ",{}]],"23":[["----------------------------------------------------------------------                                                            ",{}]],"24":[["                                                                                                                                  ",{}]],"25":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"26":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"27":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"28":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"29":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"30":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"31":[["                                                                                                                                  ",{}]],"32":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"33":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"34":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"35":[["No command 'exi' found, did you mean:                                                                                             ",{}]],"36":[[" Command 'ex' from package 'vim' (main)                                                                                           ",{}]],"37":[[" Command 'ex' from package 'nvi' (universe)                                                                                       ",{}]],"38":[[" Command 'ex' from package 'vim-nox' (universe)                                                                                   ",{}]],"39":[[" Command 'ex' from package 'vim-gnome' (main)                                                                                     ",{}]]}}],[0.08315500000000001,{"lines":{"0":[["arrays of data, whether it be ascii, binary or some other format.                                                                 ",{}]],"1":[["`Buffer` objects can be converted to strings by simply calling the                                                                ",{}]],"2":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"5":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"8":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"9":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"10":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"11":[["                                                                                                                                  ",{}]],"12":[["----------------------------------------------------------------------                                                            ",{}]],"13":[["                                                                                                                                  ",{}]],"14":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"15":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"16":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"17":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"18":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"19":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"20":[["                                                                                                                                  ",{}]],"21":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"22":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"23":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"24":[["No command 'exi' found, did you mean:                                                                                             ",{}]],"25":[[" Command 'ex' from package 'vim' (main)                                                                                           ",{}]],"26":[[" Command 'ex' from package 'nvi' (universe)                                                                                       ",{}]],"27":[[" Command 'ex' from package 'vim-nox' (universe)                                                                                   ",{}]],"28":[[" Command 'ex' from package 'vim-gnome' (main)                                                                                     ",{}]],"29":[[" Command 'ex' from package 'vim-tiny' (main)                                                                                      ",{}]],"30":[[" Command 'ex' from package 'vim-gtk' (universe)                                                                                   ",{}]],"31":[[" Command 'ex' from package 'vim-athena' (universe)                                                                                ",{}]],"32":[[" Command 'exif' from package 'exif' (universe)                                                                                    ",{}]],"33":[[" Command 'exim' from package 'exim4-daemon-heavy' (main)                                                                          ",{}]],"34":[[" Command 'exim' from package 'exim4-daemon-light' (main)                                                                          ",{}]],"35":[[" Command 'esi' from package 'atm-tools' (universe)                                                                                ",{}]],"36":[[" Command 'kexi' from package 'kexi' (main)                                                                                        ",{}]],"37":[[" Command 'exp' from package 'alliance' (universe)                                                                                 ",{}]],"38":[[" Command 'axi' from package 'afnix' (universe)                                                                                    ",{}]],"39":[["exi: command not found                                                                                                            ",{}]],"40":[["root@kielian:~/node/learnyounode# t                                                                                               ",{}]]},"cursor":{"x":35}}],[1.130262,{"lines":{"40":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]]},"cursor":{"x":34}}],[0.134829,{}],[0.127922,{"lines":{"40":[["root@kielian:~/node/learnyounode# e                                                                                               ",{}]]},"cursor":{"x":35}}],[0.131898,{"lines":{"40":[["root@kielian:~/node/learnyounode# ex                                                                                              ",{}]]},"cursor":{"x":36}}],[0.092573,{"lines":{"40":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]]},"cursor":{"x":37}}],[0.095855,{"lines":{"40":[["root@kielian:~/node/learnyounode# exit                                                                                            ",{}]]},"cursor":{"x":38}}],[0.081136,{"lines":{"0":[["`toString()` method on them. e.g. `var str = buf.toString()`.                                                                     ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"3":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"4":[["                                                                                                                                  ",{}]],"5":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"6":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"7":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"8":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[["----------------------------------------------------------------------                                                            ",{}]],"12":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"13":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"14":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"15":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"16":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"17":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"18":[["                                                                                                                                  ",{}]],"19":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"20":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"21":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"22":[["No command 'exi' found, did you mean:                                                                                             ",{}]],"23":[[" Command 'ex' from package 'vim' (main)                                                                                           ",{}]],"24":[[" Command 'ex' from package 'nvi' (universe)                                                                                       ",{}]],"25":[[" Command 'ex' from package 'vim-nox' (universe)                                                                                   ",{}]],"26":[[" Command 'ex' from package 'vim-gnome' (main)                                                                                     ",{}]],"27":[[" Command 'ex' from package 'vim-tiny' (main)                                                                                      ",{}]],"28":[[" Command 'ex' from package 'vim-gtk' (universe)                                                                                   ",{}]],"29":[[" Command 'ex' from package 'vim-athena' (universe)                                                                                ",{}]],"30":[[" Command 'exif' from package 'exif' (universe)                                                                                    ",{}]],"31":[[" Command 'exim' from package 'exim4-daemon-heavy' (main)                                                                          ",{}]],"32":[[" Command 'exim' from package 'exim4-daemon-light' (main)                                                                          ",{}]],"33":[[" Command 'esi' from package 'atm-tools' (universe)                                                                                ",{}]],"34":[[" Command 'kexi' from package 'kexi' (main)                                                                                        ",{}]],"35":[[" Command 'exp' from package 'alliance' (universe)                                                                                 ",{}]],"36":[[" Command 'axi' from package 'afnix' (universe)                                                                                    ",{}]],"37":[["exi: command not found                                                                                                            ",{}]],"38":[["root@kielian:~/node/learnyounode# exit                                                                                            ",{}]],"39":[["logout                                                                                                                            ",{}]],"40":[["                                                                                                                                  ",{}]]},"cursor":{"x":0}}],[0.003621,{"lines":{"0":[["                                                                                                                                  ",{}]],"1":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"2":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"3":[["                                                                                                                                  ",{}]],"4":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"5":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"6":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"7":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[["----------------------------------------------------------------------                                                            ",{}]],"10":[["                                                                                                                                  ",{}]],"11":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"12":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"13":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"14":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"15":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"16":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"17":[["                                                                                                                                  ",{}]],"18":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"19":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"20":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"21":[["No command 'exi' found, did you mean:                                                                                             ",{}]],"22":[[" Command 'ex' from package 'vim' (main)                                                                                           ",{}]],"23":[[" Command 'ex' from package 'nvi' (universe)                                                                                       ",{}]],"24":[[" Command 'ex' from package 'vim-nox' (universe)                                                                                   ",{}]],"25":[[" Command 'ex' from package 'vim-gnome' (main)                                                                                     ",{}]],"26":[[" Command 'ex' from package 'vim-tiny' (main)                                                                                      ",{}]],"27":[[" Command 'ex' from package 'vim-gtk' (universe)                                                                                   ",{}]],"28":[[" Command 'ex' from package 'vim-athena' (universe)                                                                                ",{}]],"29":[[" Command 'exif' from package 'exif' (universe)                                                                                    ",{}]],"30":[[" Command 'exim' from package 'exim4-daemon-heavy' (main)                                                                          ",{}]],"31":[[" Command 'exim' from package 'exim4-daemon-light' (main)                                                                          ",{}]],"32":[[" Command 'esi' from package 'atm-tools' (universe)                                                                                ",{}]],"33":[[" Command 'kexi' from package 'kexi' (main)                                                                                        ",{}]],"34":[[" Command 'exp' from package 'alliance' (universe)                                                                                 ",{}]],"35":[[" Command 'axi' from package 'afnix' (universe)                                                                                    ",{}]],"36":[["exi: command not found                                                                                                            ",{}]],"37":[["root@kielian:~/node/learnyounode# exit                                                                                            ",{}]],"38":[["logout                                                                                                                            ",{}]],"39":[["Connection to 192.241.163.59 closed.                                                                                              ",{}]]}}],[0.016427,{"lines":{"40":[["bash-3.2$                                                                                                                         ",{}]]},"cursor":{"x":10}}],[0.919789,{"lines":{"40":[["bash-3.2$ e                                                                                                                       ",{}]]},"cursor":{"x":11}}],[0.159884,{"lines":{"40":[["bash-3.2$ ex                                                                                                                      ",{}]]},"cursor":{"x":12}}],[0.129375,{"lines":{"40":[["bash-3.2$ exi                                                                                                                     ",{}]]},"cursor":{"x":13}}],[0.047923,{"lines":{"40":[["bash-3.2$ exit                                                                                                                    ",{}]]},"cursor":{"x":14}}],[0.110994,{"lines":{"0":[["Documentation on `Buffer`s can be found by pointing your browser here:                                                            ",{}]],"1":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"2":[["                                                                                                                                  ",{}]],"3":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"4":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"5":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"6":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"7":[["                                                                                                                                  ",{}]],"8":[["----------------------------------------------------------------------                                                            ",{}]],"9":[["                                                                                                                                  ",{}]],"10":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"11":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"12":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"13":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"14":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"15":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"16":[["                                                                                                                                  ",{}]],"17":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"18":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"19":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"20":[["No command 'exi' found, did you mean:                                                                                             ",{}]],"21":[[" Command 'ex' from package 'vim' (main)                                                                                           ",{}]],"22":[[" Command 'ex' from package 'nvi' (universe)                                                                                       ",{}]],"23":[[" Command 'ex' from package 'vim-nox' (universe)                                                                                   ",{}]],"24":[[" Command 'ex' from package 'vim-gnome' (main)                                                                                     ",{}]],"25":[[" Command 'ex' from package 'vim-tiny' (main)                                                                                      ",{}]],"26":[[" Command 'ex' from package 'vim-gtk' (universe)                                                                                   ",{}]],"27":[[" Command 'ex' from package 'vim-athena' (universe)                                                                                ",{}]],"28":[[" Command 'exif' from package 'exif' (universe)                                                                                    ",{}]],"29":[[" Command 'exim' from package 'exim4-daemon-heavy' (main)                                                                          ",{}]],"30":[[" Command 'exim' from package 'exim4-daemon-light' (main)                                                                          ",{}]],"31":[[" Command 'esi' from package 'atm-tools' (universe)                                                                                ",{}]],"32":[[" Command 'kexi' from package 'kexi' (main)                                                                                        ",{}]],"33":[[" Command 'exp' from package 'alliance' (universe)                                                                                 ",{}]],"34":[[" Command 'axi' from package 'afnix' (universe)                                                                                    ",{}]],"35":[["exi: command not found                                                                                                            ",{}]],"36":[["root@kielian:~/node/learnyounode# exit                                                                                            ",{}]],"37":[["logout                                                                                                                            ",{}]],"38":[["Connection to 192.241.163.59 closed.                                                                                              ",{}]],"39":[["bash-3.2$ exit                                                                                                                    ",{}]],"40":[["                                                                                                                                  ",{}]]},"cursor":{"x":0}}],[0.003658,{"lines":{"0":[["  /usr/lib/node_modules/learnyounode/node_apidoc/buffer.html                                                                      ",{}]],"1":[["                                                                                                                                  ",{}]],"2":[["If you're looking for an easy way to count the number of newlines in a                                                            ",{}]],"3":[["string, recall that a JavaScript `String` can be `.split()` into an                                                               ",{}]],"4":[["array of substrings and that '\\n'. Using this method you'll end up                                                                ",{}]],"5":[["with an array that has one more element than the number of newlines.                                                              ",{}]],"6":[["                                                                                                                                  ",{}]],"7":[["----------------------------------------------------------------------                                                            ",{}]],"8":[["                                                                                                                                  ",{}]],"9":[[" » To print these instructions again, run: `learnyounode print`.                                                                  ",{"bold":true}]],"10":[[" » To execute your program in a test environment, run:",{"bold":true}],["                                                                            ",{}]],"11":[["   `learnyounode run program.js`.                                                                                                 ",{"bold":true}]],"12":[[" » To verify your program, run: `learnyounode verify program.js`.",{"bold":true}],["                                                                 ",{}]],"13":[[" » For help with this problem or with learnyounode, run:",{"bold":true}],["                                                                          ",{}]],"14":[["   `learnyounode help`.                                                                                                           ",{"bold":true}]],"15":[["                                                                                                                                  ",{}]],"16":[["root@kielian:~/node/learnyounode# cat level3.md | less                                                                            ",{}]],"17":[["root@kielian:~/node/learnyounode#                                                                                                 ",{}]],"18":[["root@kielian:~/node/learnyounode# exi                                                                                             ",{}]],"19":[["No command 'exi' found, did you mean:                                                                                             ",{}]],"20":[[" Command 'ex' from package 'vim' (main)                                                                                           ",{}]],"21":[[" Command 'ex' from package 'nvi' (universe)                                                                                       ",{}]],"22":[[" Command 'ex' from package 'vim-nox' (universe)                                                                                   ",{}]],"23":[[" Command 'ex' from package 'vim-gnome' (main)                                                                                     ",{}]],"24":[[" Command 'ex' from package 'vim-tiny' (main)                                                                                      ",{}]],"25":[[" Command 'ex' from package 'vim-gtk' (universe)                                                                                   ",{}]],"26":[[" Command 'ex' from package 'vim-athena' (universe)                                                                                ",{}]],"27":[[" Command 'exif' from package 'exif' (universe)                                                                                    ",{}]],"28":[[" Command 'exim' from package 'exim4-daemon-heavy' (main)                                                                          ",{}]],"29":[[" Command 'exim' from package 'exim4-daemon-light' (main)                                                                          ",{}]],"30":[[" Command 'esi' from package 'atm-tools' (universe)                                                                                ",{}]],"31":[[" Command 'kexi' from package 'kexi' (main)                                                                                        ",{}]],"32":[[" Command 'exp' from package 'alliance' (universe)                                                                                 ",{}]],"33":[[" Command 'axi' from package 'afnix' (universe)                                                                                    ",{}]],"34":[["exi: command not found                                                                                                            ",{}]],"35":[["root@kielian:~/node/learnyounode# exit                                                                                            ",{}]],"36":[["logout                                                                                                                            ",{}]],"37":[["Connection to 192.241.163.59 closed.                                                                                              ",{}]],"38":[["bash-3.2$ exit                                                                                                                    ",{}]],"39":[["exit                                                                                                                              ",{}]]}}]]