[[0.019234,{"lines":{"0":[["jlund3@savant:~$                                                                 ",{}]],"1":[["                                                                                 ",{}]],"2":[["                                                                                 ",{}]],"3":[["                                                                                 ",{}]],"4":[["                                                                                 ",{}]],"5":[["                                                                                 ",{}]],"6":[["                                                                                 ",{}]],"7":[["                                                                                 ",{}]],"8":[["                                                                                 ",{}]],"9":[["                                                                                 ",{}]],"10":[["                                                                                 ",{}]],"11":[["                                                                                 ",{}]],"12":[["                                                                                 ",{}]],"13":[["                                                                                 ",{}]],"14":[["                                                                                 ",{}]],"15":[["                                                                                 ",{}]],"16":[["                                                                                 ",{}]],"17":[["                                                                                 ",{}]],"18":[["                                                                                 ",{}]],"19":[["                                                                                 ",{}]],"20":[["                                                                                 ",{}]],"21":[["                                                                                 ",{}]],"22":[["                                                                                 ",{}]],"23":[["                                                                                 ",{}]],"24":[["                                                                                 ",{}]]},"cursor":{"x":17,"y":0,"visible":true}}],[0.746985,{"lines":{"0":[["jlund3@savant:~$ l                                                               ",{}]]},"cursor":{"x":18}}],[0.135991,{"lines":{"0":[["jlund3@savant:~$ ls                                                              ",{}]]},"cursor":{"x":19}}],[0.08833299999999999,{"cursor":{"x":0,"y":1}}],[0.012719,{"lines":{"1":[["config",{"fg":4,"bold":true}],["  ",{}],["desktop",{"fg":4,"bold":true}],["  ",{}],["documents",{"fg":4,"bold":true}],["  ",{}],["git",{"fg":6,"bold":true}],["  ",{}],["go",{"fg":4,"bold":true}],["  ",{}],["local",{"fg":6,"bold":true}],["  ",{}],["public_html",{"fg":4,"bold":true}],["  ",{}],["research",{"fg":4,"bold":true}],["  ",{}],["scratch",{"fg":6,"bold":true}],["       ",{}]],"2":[["jlund3@savant:~$                                                                 ",{}]]},"cursor":{"x":17,"y":2}}],[1.338759,{"lines":{"2":[["jlund3@savant:~$ c                                                               ",{}]]},"cursor":{"x":18}}],[0.08797199999999999,{"lines":{"2":[["jlund3@savant:~$ cd                                                              ",{}]]},"cursor":{"x":19}}],[0.168089,{"cursor":{"x":20}}],[0.135916,{"lines":{"2":[["jlund3@savant:~$ cd r                                                            ",{}]]},"cursor":{"x":21}}],[0.088005,{"lines":{"2":[["jlund3@savant:~$ cd re                                                           ",{}]]},"cursor":{"x":22}}],[0.193515,{"lines":{"2":[["jlund3@savant:~$ cd research/                                                    ",{}]]},"cursor":{"x":29}}],[0.126371,{"lines":{"2":[["jlund3@savant:~$ cd research/m                                                   ",{}]]},"cursor":{"x":30}}],[0.112037,{"lines":{"2":[["jlund3@savant:~$ cd research/mo                                                  ",{}]]},"cursor":{"x":31}}],[0.119176,{"lines":{"2":[["jlund3@savant:~$ cd research/modelt/                                             ",{}]]},"cursor":{"x":36}}],[0.352598,{"cursor":{"x":0,"y":3}}],[0.009292,{"lines":{"3":[["data",{"fg":6,"bold":true}],["  ",{}],["eval",{"fg":4,"bold":true}],["  LICENSE  main.go  ",{}],["model",{"fg":4,"bold":true}],["  ",{}],["pipeline",{"fg":4,"bold":true}],["  README.md  ",{}],["run",{"fg":4,"bold":true}],["  ",{}],["util",{"fg":4,"bold":true}],["              ",{}]],"4":[["jlund3@savant:modelt$                                                            ",{}]]},"cursor":{"x":22,"y":4}}],[0.382841,{"lines":{"4":[["jlund3@savant:modelt$ g                                                          ",{}]]},"cursor":{"x":23}}],[0.096111,{"lines":{"4":[["jlund3@savant:modelt$ gi                                                         ",{}]]},"cursor":{"x":24}}],[0.119732,{"lines":{"4":[["jlund3@savant:modelt$ git                                                        ",{}]]},"cursor":{"x":25}}],[0.08813,{"cursor":{"x":26}}],[0.120062,{"lines":{"4":[["jlund3@savant:modelt$ git s                                                      ",{}]]},"cursor":{"x":27}}],[0.080139,{"lines":{"4":[["jlund3@savant:modelt$ git st                                                     ",{}]]},"cursor":{"x":28}}],[0.07997,{"cursor":{"x":0,"y":5}}],[0.134134,{"lines":{"5":[["## ",{}],["master",{"fg":2}],["                                                                        ",{}]],"6":[[" ",{}],["M",{"fg":1}],[" eval/cluster.go                                                               ",{}]],"7":[[" ",{}],["M",{"fg":1}],[" main.go                                                                       ",{}]]},"cursor":{"y":8}}],[0.001846,{"lines":{"8":[["jlund3@savant:modelt$                                                            ",{}]]},"cursor":{"x":22}}],[1.615526,{"lines":{"8":[["jlund3@savant:modelt$ g                                                          ",{}]]},"cursor":{"x":23}}],[0.09599000000000001,{"lines":{"8":[["jlund3@savant:modelt$ gi                                                         ",{}]]},"cursor":{"x":24}}],[0.127919,{"lines":{"8":[["jlund3@savant:modelt$ git                                                        ",{}]]},"cursor":{"x":25}}],[0.104096,{"cursor":{"x":26}}],[0.7038450000000001,{"lines":{"8":[["jlund3@savant:modelt$ git s                                                      ",{}]]},"cursor":{"x":27}}],[0.08797000000000001,{"lines":{"8":[["jlund3@savant:modelt$ git st                                                     ",{}]]},"cursor":{"x":28}}],[0.455964,{"lines":{"8":[["jlund3@savant:modelt$ git s                                                      ",{}]]},"cursor":{"x":27}}],[0.144015,{"lines":{"8":[["jlund3@savant:modelt$ git                                                        ",{}]]},"cursor":{"x":26}}],[0.071894,{"lines":{"8":[["jlund3@savant:modelt$ git d                                                      ",{}]]},"cursor":{"x":27}}],[0.055837,{"lines":{"8":[["jlund3@savant:modelt$ git df                                                     ",{}]]},"cursor":{"x":28}}],[0.080859,{"cursor":{"x":0,"y":9}}],[0.08110299999999999,{"lines":{"0":[["## ",{}],["master",{"fg":2}],["                                                                        ",{}]],"1":[[" ",{}],["M",{"fg":1}],[" eval/cluster.go                                                               ",{}]],"2":[[" ",{}],["M",{"fg":1}],[" main.go                                                                       ",{}]],"3":[["jlund3@savant:modelt$ git df                                                     ",{}]],"4":[["diff --git a/eval/cluster.go b/eval/cluster.go",{"bold":true}],["                                   ",{}]],"5":[["index b02100f..ecdaa2b 100644",{"bold":true}],["                                                    ",{}]],"6":[["--- a/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"7":[["+++ b/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"8":[["@@ -60,6 +60,33 @@",{"fg":6}],[" func NewClusteringIndex(index string) *Clustering {           ",{}]],"9":[["        return &Clustering{labels, data}                                         ",{}]],"10":[[" }                                                                               ",{}]],"12":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"13":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"14":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"15":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"16":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"17":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"18":[["+",{"fg":2}],["                                                                                ",{}]],"19":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"20":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"21":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"22":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"23":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"24":[["+",{"fg":2}],["                                                                                ",{}]]},"cursor":{"x":2,"y":24}}],[8.1e-05,{"lines":{"0":[["diff --git a/eval/cluster.go b/eval/cluster.go",{"bold":true}],["                                   ",{}]],"1":[["index b02100f..ecdaa2b 100644",{"bold":true}],["                                                    ",{}]],"2":[["--- a/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"3":[["+++ b/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"4":[["@@ -60,6 +60,33 @@",{"fg":6}],[" func NewClusteringIndex(index string) *Clustering {           ",{}]],"5":[["        return &Clustering{labels, data}                                         ",{}]],"6":[[" }                                                                               ",{}]],"7":[["                                                                                 ",{}]],"8":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"9":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"10":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"11":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"12":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"13":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"14":[["+",{"fg":2}],["                                                                                ",{}]],"15":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"16":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"17":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"18":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"19":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"20":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"21":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"22":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"23":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"24":[[":                                                                                ",{}]]},"cursor":{"x":1}}],[0.726066,{"lines":{"0":[["index b02100f..ecdaa2b 100644",{"bold":true}],["                                                    ",{}]],"1":[["--- a/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"2":[["+++ b/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"3":[["@@ -60,6 +60,33 @@",{"fg":6}],[" func NewClusteringIndex(index string) *Clustering {           ",{}]],"4":[["        return &Clustering{labels, data}                                         ",{}]],"5":[[" }                                                                               ",{}]],"6":[["                                                                                 ",{}]],"7":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"8":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"9":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"10":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"11":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"12":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"13":[["+",{"fg":2}],["                                                                                ",{}]],"14":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"15":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"16":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"17":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"18":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"19":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"20":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"21":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"22":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"23":[["+",{"fg":2}],["                                                                                ",{}]]}}],[0.49974,{"lines":{"0":[["--- a/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"1":[["+++ b/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"2":[["@@ -60,6 +60,33 @@",{"fg":6}],[" func NewClusteringIndex(index string) *Clustering {           ",{}]],"3":[["        return &Clustering{labels, data}                                         ",{}]],"4":[[" }                                                                               ",{}]],"5":[["                                                                                 ",{}]],"6":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"7":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"8":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"9":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"10":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"11":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"12":[["+",{"fg":2}],["                                                                                ",{}]],"13":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"14":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"15":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"16":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"17":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"18":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"19":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"20":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"21":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"22":[["+",{"fg":2}],["                                                                                ",{}]],"23":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]]}}],[0.032321,{"lines":{"0":[["+++ b/eval/cluster.go",{"bold":true}],["                                                            ",{}]],"1":[["@@ -60,6 +60,33 @@",{"fg":6}],[" func NewClusteringIndex(index string) *Clustering {           ",{}]],"2":[["        return &Clustering{labels, data}                                         ",{}]],"3":[[" }                                                                               ",{}]],"4":[["                                                                                 ",{}]],"5":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"6":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"7":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"8":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"9":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"10":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"11":[["+",{"fg":2}],["                                                                                ",{}]],"12":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"13":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"14":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"15":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"16":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"17":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"18":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"19":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"20":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"21":[["+",{"fg":2}],["                                                                                ",{}]],"22":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"23":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]]}}],[0.032035,{"lines":{"0":[["@@ -60,6 +60,33 @@",{"fg":6}],[" func NewClusteringIndex(index string) *Clustering {           ",{}]],"1":[["        return &Clustering{labels, data}                                         ",{}]],"2":[[" }                                                                               ",{}]],"3":[["                                                                                 ",{}]],"4":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"5":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"6":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"7":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"8":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"9":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"10":[["+",{"fg":2}],["                                                                                ",{}]],"11":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"12":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"13":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"14":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"15":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"16":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"17":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"18":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"19":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"20":[["+",{"fg":2}],["                                                                                ",{}]],"21":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"22":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"23":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]]}}],[0.030898,{"lines":{"0":[["        return &Clustering{labels, data}                                         ",{}]],"1":[[" }                                                                               ",{}]],"2":[["                                                                                 ",{}]],"3":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"4":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"5":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"6":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"7":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"8":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"9":[["+",{"fg":2}],["                                                                                ",{}]],"10":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"11":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"12":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"13":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"14":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"15":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"16":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"17":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"18":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"19":[["+",{"fg":2}],["                                                                                ",{}]],"20":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"21":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"22":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"23":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]]}}],[0.030852,{"lines":{"0":[[" }                                                                               ",{}]],"1":[["                                                                                 ",{}]],"2":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"3":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"4":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"5":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"6":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"7":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"8":[["+",{"fg":2}],["                                                                                ",{}]],"9":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"10":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"11":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"12":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"13":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"14":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"15":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"16":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"17":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"18":[["+",{"fg":2}],["                                                                                ",{}]],"19":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"20":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"21":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"22":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"23":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]]}}],[0.03112,{"lines":{"0":[["                                                                                 ",{}]],"1":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"2":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"3":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"4":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"5":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"6":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"7":[["+",{"fg":2}],["                                                                                ",{}]],"8":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"9":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"10":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"11":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"12":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"13":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"14":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"15":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"16":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"17":[["+",{"fg":2}],["                                                                                ",{}]],"18":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"19":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"20":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"21":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"22":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"23":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]]}}],[0.03001,{"lines":{"0":[["+func NewClusteringIndexRef(index, root string, c *pipeline.Corpus) *Clustering {",{"fg":2}]],"1":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"2":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"3":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"4":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"5":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"6":[["+",{"fg":2}],["                                                                                ",{}]],"7":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"8":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"9":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"10":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"11":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"12":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"13":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"14":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"15":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"16":[["+",{"fg":2}],["                                                                                ",{}]],"17":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"18":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"19":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"20":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"21":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"22":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"23":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]]}}],[0.03117,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["indexFile, err := os.Open(index)",{"fg":2}],["                                         ",{}]],"1":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"2":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"3":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"4":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"5":[["+",{"fg":2}],["                                                                                ",{}]],"6":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"7":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"8":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"9":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"10":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"11":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"12":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"13":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"14":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"15":[["+",{"fg":2}],["                                                                                ",{}]],"16":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"17":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"18":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"19":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"20":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"21":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"22":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"23":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]]}}],[0.031048,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["if err != nil {",{"fg":2}],["                                                          ",{}]],"1":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"2":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"3":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"4":[["+",{"fg":2}],["                                                                                ",{}]],"5":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"6":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"7":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"8":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"9":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"10":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"11":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"12":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"13":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"14":[["+",{"fg":2}],["                                                                                ",{}]],"15":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"16":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"17":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"18":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"19":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"20":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"21":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"22":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"23":[["+}",{"fg":2}],["                                                                               ",{}]]}}],[0.030924,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"1":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"2":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"3":[["+",{"fg":2}],["                                                                                ",{}]],"4":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"5":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"6":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"7":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"8":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"9":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"10":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"11":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"12":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"13":[["+",{"fg":2}],["                                                                                ",{}]],"14":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"15":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"16":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"17":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"18":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"19":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"20":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"21":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"22":[["+}",{"fg":2}],["                                                                               ",{}]],"23":[["+",{"fg":2}],["                                                                                ",{}]]}}],[0.030864,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"1":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"2":[["+",{"fg":2}],["                                                                                ",{}]],"3":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"4":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"5":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"6":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"7":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"8":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"9":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"10":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"11":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"12":[["+",{"fg":2}],["                                                                                ",{}]],"13":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"14":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"15":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"16":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"17":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"18":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"19":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"20":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"21":[["+}",{"fg":2}],["                                                                               ",{}]],"22":[["+",{"fg":2}],["                                                                                ",{}]],"23":[[" type Contingency struct {                                                       ",{}]]}}],[0.03079,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["defer indexFile.Close()",{"fg":2}],["                                                  ",{}]],"1":[["+",{"fg":2}],["                                                                                ",{}]],"2":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"3":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"4":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"5":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"6":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"7":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"8":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"9":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"10":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"11":[["+",{"fg":2}],["                                                                                ",{}]],"12":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"13":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"14":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"15":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"16":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"17":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"18":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"19":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"20":[["+}",{"fg":2}],["                                                                               ",{}]],"21":[["+",{"fg":2}],["                                                                                ",{}]],"22":[[" type Contingency struct {                                                       ",{}]],"23":[["        Counts map[interface{}]map[interface{}]int                               ",{}]]}}],[0.03006,{"lines":{"0":[["+",{"fg":2}],["                                                                                ",{}]],"1":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"2":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"3":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"4":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"5":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"6":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"7":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"8":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"9":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"10":[["+",{"fg":2}],["                                                                                ",{}]],"11":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"12":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"13":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"14":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"15":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"16":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"17":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"18":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"19":[["+}",{"fg":2}],["                                                                               ",{}]],"20":[["+",{"fg":2}],["                                                                                ",{}]],"21":[[" type Contingency struct {                                                       ",{}]],"22":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"23":[[" }                                                                               ",{}]]}}],[0.030164,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["table := make(map[string]string)",{"fg":2}],["                                         ",{}]],"1":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"2":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"3":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"4":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"5":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"6":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"7":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"8":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"9":[["+",{"fg":2}],["                                                                                ",{}]],"10":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"11":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"12":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"13":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"14":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"15":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"16":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"17":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"18":[["+}",{"fg":2}],["                                                                               ",{}]],"19":[["+",{"fg":2}],["                                                                                ",{}]],"20":[[" type Contingency struct {                                                       ",{}]],"21":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"22":[[" }                                                                               ",{}]],"23":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]]}}],[0.029368,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["scanner := bufio.NewScanner(indexFile)",{"fg":2}],["                                   ",{}]],"1":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"2":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"3":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"4":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"5":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"6":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"7":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"8":[["+",{"fg":2}],["                                                                                ",{}]],"9":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"10":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"11":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"12":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"13":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"14":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"15":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"16":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"17":[["+}",{"fg":2}],["                                                                               ",{}]],"18":[["+",{"fg":2}],["                                                                                ",{}]],"19":[[" type Contingency struct {                                                       ",{}]],"20":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"21":[[" }                                                                               ",{}]],"22":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"23":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]]}}],[0.032598,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["for scanner.Scan() {",{"fg":2}],["                                                     ",{}]],"1":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"2":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"3":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"4":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"5":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"6":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"7":[["+",{"fg":2}],["                                                                                ",{}]],"8":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"9":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"10":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"11":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"12":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"13":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"14":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"15":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"16":[["+}",{"fg":2}],["                                                                               ",{}]],"17":[["+",{"fg":2}],["                                                                                ",{}]],"18":[[" type Contingency struct {                                                       ",{}]],"19":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"20":[[" }                                                                               ",{}]],"21":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"22":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"23":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]]}}],[0.030495,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["line := strings.Split(scanner.Text(), \"\\t\")",{"fg":2}],["                      ",{}]],"1":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"2":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"3":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"4":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"5":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"6":[["+",{"fg":2}],["                                                                                ",{}]],"7":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"8":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"9":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"10":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"11":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"12":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"13":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"14":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"15":[["+}",{"fg":2}],["                                                                               ",{}]],"16":[["+",{"fg":2}],["                                                                                ",{}]],"17":[[" type Contingency struct {                                                       ",{}]],"18":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"19":[[" }                                                                               ",{}]],"20":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"21":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"22":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"23":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]]}}],[0.030325,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["table[path.Join(root, line[0])] = line[1]",{"fg":2}],["                        ",{}]],"1":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"2":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"3":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"4":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"5":[["+",{"fg":2}],["                                                                                ",{}]],"6":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"7":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"8":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"9":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"10":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"11":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"12":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"13":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"14":[["+}",{"fg":2}],["                                                                               ",{}]],"15":[["+",{"fg":2}],["                                                                                ",{}]],"16":[[" type Contingency struct {                                                       ",{}]],"17":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"18":[[" }                                                                               ",{}]],"19":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"20":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"21":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"22":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"23":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]]}}],[0.030324,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"1":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"2":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"3":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"4":[["+",{"fg":2}],["                                                                                ",{}]],"5":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"6":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"7":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"8":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"9":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"10":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"11":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"12":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"13":[["+}",{"fg":2}],["                                                                               ",{}]],"14":[["+",{"fg":2}],["                                                                                ",{}]],"15":[[" type Contingency struct {                                                       ",{}]],"16":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"17":[[" }                                                                               ",{}]],"18":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"19":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"20":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"21":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"22":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"23":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]]}}],[0.03035,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["if err := scanner.Err(); err != nil {",{"fg":2}],["                                    ",{}]],"1":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"2":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"3":[["+",{"fg":2}],["                                                                                ",{}]],"4":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"5":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"6":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"7":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"8":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"9":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"10":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"11":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"12":[["+}",{"fg":2}],["                                                                               ",{}]],"13":[["+",{"fg":2}],["                                                                                ",{}]],"14":[[" type Contingency struct {                                                       ",{}]],"15":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"16":[[" }                                                                               ",{}]],"17":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"18":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"19":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"20":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"21":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"22":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"23":[["        corpus := GetCorpus()                                                    ",{}]]}}],[0.030076,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["panic(err)",{"fg":2}],["                                                       ",{}]],"1":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"2":[["+",{"fg":2}],["                                                                                ",{}]],"3":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"4":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"5":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"6":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"7":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"8":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"9":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"10":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"11":[["+}",{"fg":2}],["                                                                               ",{}]],"12":[["+",{"fg":2}],["                                                                                ",{}]],"13":[[" type Contingency struct {                                                       ",{}]],"14":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"15":[[" }                                                                               ",{}]],"16":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"17":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"18":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"19":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"20":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"21":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"22":[["        corpus := GetCorpus()                                                    ",{}]],"23":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]]}}],[0.030461,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"1":[["+",{"fg":2}],["                                                                                ",{}]],"2":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"3":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"4":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"5":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"6":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"7":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"8":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"9":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"10":[["+}",{"fg":2}],["                                                                               ",{}]],"11":[["+",{"fg":2}],["                                                                                ",{}]],"12":[[" type Contingency struct {                                                       ",{}]],"13":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"14":[[" }                                                                               ",{}]],"15":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"16":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"17":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"18":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"19":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"20":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"21":[["        corpus := GetCorpus()                                                    ",{}]],"22":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"23":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]]}}],[0.031571,{"lines":{"0":[["+",{"fg":2}],["                                                                                ",{}]],"1":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"2":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"3":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"4":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"5":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"6":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"7":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"8":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"9":[["+}",{"fg":2}],["                                                                               ",{}]],"10":[["+",{"fg":2}],["                                                                                ",{}]],"11":[[" type Contingency struct {                                                       ",{}]],"12":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"13":[[" }                                                                               ",{}]],"14":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"15":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"16":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"17":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"18":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"19":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"20":[["        corpus := GetCorpus()                                                    ",{}]],"21":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"22":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"23":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]]}}],[0.03054,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["labels := make(map[interface{}]bool)",{"fg":2}],["                                     ",{}]],"1":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"2":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"3":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"4":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"5":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"6":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"7":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"8":[["+}",{"fg":2}],["                                                                               ",{}]],"9":[["+",{"fg":2}],["                                                                                ",{}]],"10":[[" type Contingency struct {                                                       ",{}]],"11":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"12":[[" }                                                                               ",{}]],"13":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"14":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"15":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"16":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"17":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"18":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"19":[["        corpus := GetCorpus()                                                    ",{}]],"20":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"21":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"22":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"23":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]]}}],[0.03081,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["data := make([]interface{}, c.M)",{"fg":2}],["                                         ",{}]],"1":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"2":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"3":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"4":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"5":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"6":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"7":[["+}",{"fg":2}],["                                                                               ",{}]],"8":[["+",{"fg":2}],["                                                                                ",{}]],"9":[[" type Contingency struct {                                                       ",{}]],"10":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"11":[[" }                                                                               ",{}]],"12":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"13":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"14":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"15":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"16":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"17":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"18":[["        corpus := GetCorpus()                                                    ",{}]],"19":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"20":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"21":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"22":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"23":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]]}}],[0.030962,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["for d := 0; d < c.M; d++ {",{"fg":2}],["                                               ",{}]],"1":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"2":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"3":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"4":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"5":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"6":[["+}",{"fg":2}],["                                                                               ",{}]],"7":[["+",{"fg":2}],["                                                                                ",{}]],"8":[[" type Contingency struct {                                                       ",{}]],"9":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"10":[[" }                                                                               ",{}]],"11":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"12":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"13":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"14":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"15":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"16":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"17":[["        corpus := GetCorpus()                                                    ",{}]],"18":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"19":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"20":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"21":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"22":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"23":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]]}}],[0.030416,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["label := table[c.Titles[d]]",{"fg":2}],["                                      ",{}]],"1":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"2":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"3":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"4":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"5":[["+}",{"fg":2}],["                                                                               ",{}]],"6":[["+",{"fg":2}],["                                                                                ",{}]],"7":[[" type Contingency struct {                                                       ",{}]],"8":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"9":[[" }                                                                               ",{}]],"10":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"11":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"12":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"13":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"14":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"15":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"16":[["        corpus := GetCorpus()                                                    ",{}]],"17":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"18":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"19":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"20":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"21":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"22":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"23":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]]}}],[0.030695,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["data[d] = label",{"fg":2}],["                                                  ",{}]],"1":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"2":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"3":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"4":[["+}",{"fg":2}],["                                                                               ",{}]],"5":[["+",{"fg":2}],["                                                                                ",{}]],"6":[[" type Contingency struct {                                                       ",{}]],"7":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"8":[[" }                                                                               ",{}]],"9":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"10":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"11":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"12":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"13":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"14":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"15":[["        corpus := GetCorpus()                                                    ",{}]],"16":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"17":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"18":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"19":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"20":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"21":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"22":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"23":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]]}}],[0.030925,{"lines":{"0":[["+",{"fg":2}],["               ",{}],["labels[label] = true",{"fg":2}],["                                             ",{}]],"1":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"2":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"3":[["+}",{"fg":2}],["                                                                               ",{}]],"4":[["+",{"fg":2}],["                                                                                ",{}]],"5":[[" type Contingency struct {                                                       ",{}]],"6":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"7":[[" }                                                                               ",{}]],"8":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"9":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"10":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"11":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"12":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"13":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"14":[["        corpus := GetCorpus()                                                    ",{}]],"15":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"16":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"17":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"18":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"19":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"20":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"21":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"22":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"23":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]]}}],[0.030722,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"1":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"2":[["+}",{"fg":2}],["                                                                               ",{}]],"3":[["+",{"fg":2}],["                                                                                ",{}]],"4":[[" type Contingency struct {                                                       ",{}]],"5":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"6":[[" }                                                                               ",{}]],"7":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"8":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"9":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"10":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"11":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"12":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"13":[["        corpus := GetCorpus()                                                    ",{}]],"14":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"15":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"16":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"17":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"18":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"19":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"20":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"21":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"22":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"23":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]]}}],[0.030734,{"lines":{"0":[["+",{"fg":2}],["       ",{}],["return &Clustering{labels, data}",{"fg":2}],["                                         ",{}]],"1":[["+}",{"fg":2}],["                                                                               ",{}]],"2":[["+",{"fg":2}],["                                                                                ",{}]],"3":[[" type Contingency struct {                                                       ",{}]],"4":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"5":[[" }                                                                               ",{}]],"6":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"7":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"8":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"9":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"10":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"11":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"12":[["        corpus := GetCorpus()                                                    ",{}]],"13":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"14":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"15":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"16":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"17":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"18":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"19":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"20":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"21":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"22":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"23":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]]}}],[0.031236,{"lines":{"0":[["+}",{"fg":2}],["                                                                               ",{}]],"1":[["+",{"fg":2}],["                                                                                ",{}]],"2":[[" type Contingency struct {                                                       ",{}]],"3":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"4":[[" }                                                                               ",{}]],"5":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"6":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"7":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"8":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"9":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"10":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"11":[["        corpus := GetCorpus()                                                    ",{}]],"12":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"13":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"14":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"15":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"16":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"17":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"18":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"19":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"20":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"21":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"22":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"23":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]]}}],[0.030762,{"lines":{"0":[["+",{"fg":2}],["                                                                                ",{}]],"1":[[" type Contingency struct {                                                       ",{}]],"2":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"3":[[" }                                                                               ",{}]],"4":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"5":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"6":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"7":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"8":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"9":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"10":[["        corpus := GetCorpus()                                                    ",{}]],"11":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"12":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"13":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"14":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"15":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"16":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"17":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"18":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"19":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"20":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"21":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"22":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"23":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]]}}],[0.030819,{"lines":{"0":[[" type Contingency struct {                                                       ",{}]],"1":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"2":[[" }                                                                               ",{}]],"3":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"4":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"5":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"6":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"7":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"8":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"9":[["        corpus := GetCorpus()                                                    ",{}]],"10":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"11":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"12":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"13":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"14":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"15":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"16":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"17":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"18":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"19":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"20":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"21":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"22":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"23":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]]}}],[0.030963,{"lines":{"0":[["        Counts map[interface{}]map[interface{}]int                               ",{}]],"1":[[" }                                                                               ",{}]],"2":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"3":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"4":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"5":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"6":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"7":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"8":[["        corpus := GetCorpus()                                                    ",{}]],"9":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"10":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"11":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"12":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"13":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"14":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"15":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"16":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"17":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"18":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"19":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"20":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"21":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"22":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"23":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]]}}],[0.031078,{"lines":{"0":[[" }                                                                               ",{}]],"1":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"2":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"3":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"4":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"5":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"6":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"7":[["        corpus := GetCorpus()                                                    ",{}]],"8":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"9":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"10":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"11":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"12":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"13":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"14":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"15":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"16":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"17":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"18":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"19":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"20":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"21":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"22":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]],"23":[["+",{"fg":2}],["               ",{}],["panic(\"OH NOOES\")",{"fg":2}],["                                                ",{}]]}}],[0.030976,{"lines":{"0":[["diff --git a/main.go b/main.go",{"bold":true}],["                                                   ",{}]],"1":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"2":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"3":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"4":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"5":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"6":[["        corpus := GetCorpus()                                                    ",{}]],"7":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"8":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"9":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"10":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"11":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"12":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"13":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"14":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"15":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"16":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"17":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"18":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"19":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"20":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"21":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]],"22":[["+",{"fg":2}],["               ",{}],["panic(\"OH NOOES\")",{"fg":2}],["                                                ",{}]],"23":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]]}}],[0.030322,{"lines":{"0":[["index 3e3ffd6..950d9aa 100644",{"bold":true}],["                                                    ",{}]],"1":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"2":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"3":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"4":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"5":[["        corpus := GetCorpus()                                                    ",{}]],"6":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"7":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"8":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"9":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"10":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"11":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"12":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"13":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"14":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"15":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"16":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"17":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"18":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"19":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"20":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]],"21":[["+",{"fg":2}],["               ",{}],["panic(\"OH NOOES\")",{"fg":2}],["                                                ",{}]],"22":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"23":[["        mm := cluster.NewMM(corpus, len(gold.Labels), .1, .1)                    ",{}]]}}],[0.030795,{"lines":{"0":[["--- a/main.go",{"bold":true}],["                                                                    ",{}]],"1":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"2":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"3":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"4":[["        corpus := GetCorpus()                                                    ",{}]],"5":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"6":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"7":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"8":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"9":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"10":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"11":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"12":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"13":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"14":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"15":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"16":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"17":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"18":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"19":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]],"20":[["+",{"fg":2}],["               ",{}],["panic(\"OH NOOES\")",{"fg":2}],["                                                ",{}]],"21":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"22":[["        mm := cluster.NewMM(corpus, len(gold.Labels), .1, .1)                    ",{}]],"23":[["        inferencer := cluster.NewMMGibbs(mm)                                     ",{}]]}}],[0.031181,{"lines":{"0":[["+++ b/main.go",{"bold":true}],["                                                                    ",{}]],"1":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"2":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"3":[["        corpus := GetCorpus()                                                    ",{}]],"4":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"5":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"6":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"7":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"8":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"9":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"10":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"11":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"12":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"13":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"14":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"15":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"16":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"17":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"18":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]],"19":[["+",{"fg":2}],["               ",{}],["panic(\"OH NOOES\")",{"fg":2}],["                                                ",{}]],"20":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"21":[["        mm := cluster.NewMM(corpus, len(gold.Labels), .1, .1)                    ",{}]],"22":[["        inferencer := cluster.NewMMGibbs(mm)                                     ",{}]],"23":[["        for i := 0; i < 20; i++ {                                                ",{}]]}}],[0.03007,{"lines":{"24":[["(END)",{"inverse":true}],["                                                                            ",{}]]},"cursor":{"x":5}}],[0.030895,{}],[0.5412,{"lines":{"24":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.0004929999999999999,{"lines":{"24":[["jlund3@savant:modelt$                                                            ",{}]]},"cursor":{"x":22}}],[0.271483,{"lines":{"24":[["jlund3@savant:modelt$ c                                                          ",{}]]},"cursor":{"x":23}}],[0.120122,{"lines":{"24":[["jlund3@savant:modelt$ cl                                                         ",{}]]},"cursor":{"x":24}}],[0.127922,{"lines":{"24":[["jlund3@savant:modelt$ cle                                                        ",{}]]},"cursor":{"x":25}}],[0.06383,{"lines":{"24":[["jlund3@savant:modelt$ clea                                                       ",{}]]},"cursor":{"x":26}}],[0.07201399999999999,{"lines":{"24":[["jlund3@savant:modelt$ clear                                                      ",{}]]},"cursor":{"x":27}}],[0.144275,{"lines":{"0":[["@@ -36,6 +36,22 @@",{"fg":6}],[" func main() {                                                 ",{}]],"1":[["        rand.Seed(time.Now().UnixNano())                                         ",{}]],"2":[["        corpus := GetCorpus()                                                    ",{}]],"3":[["        gold := eval.NewClusteringIndex(\"data/enron/annotation.tab\")             ",{}]],"4":[["+",{"fg":2}],["       ",{}],["gold2 := eval.NewClusteringIndexRef(",{"fg":2}],["                                     ",{}]],"5":[["+",{"fg":2}],["               ",{}],["\"data/enron/annotation.tab\",",{"fg":2}],["                                     ",{}]],"6":[["+",{"fg":2}],["               ",{}],["\"data/enron/maildir\",",{"fg":2}],["                                            ",{}]],"7":[["+",{"fg":2}],["               ",{}],["corpus)",{"fg":2}],["                                                          ",{}]],"8":[["+",{"fg":2}],["       ",{}],["fail := false",{"fg":2}],["                                                            ",{}]],"9":[["+",{"fg":2}],["       ",{}],["for d := 0; d < corpus.M; d++ {",{"fg":2}],["                                          ",{}]],"10":[["+",{"fg":2}],["               ",{}],["fmt.Printf(\"%s %s %s\", corpus.Titles[d], gold.Data[d], gold2.Data",{"fg":2}]],"11":[["+",{"fg":2}],["               ",{}],["if gold.Data[d] != gold2.Data[d] {",{"fg":2}],["                               ",{}]],"12":[["+",{"fg":2}],["                       ",{}],["fail = true",{"fg":2}],["                                              ",{}]],"13":[["+",{"fg":2}],["                       ",{}],["fmt.Print(\" *****************\")",{"fg":2}],["                          ",{}]],"14":[["+",{"fg":2}],["               ",{}],["}",{"fg":2}],["                                                                ",{}]],"15":[["+",{"fg":2}],["               ",{}],["fmt.Println()",{"fg":2}],["                                                    ",{}]],"16":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"17":[["+",{"fg":2}],["       ",{}],["if fail {",{"fg":2}],["                                                                ",{}]],"18":[["+",{"fg":2}],["               ",{}],["panic(\"OH NOOES\")",{"fg":2}],["                                                ",{}]],"19":[["+",{"fg":2}],["       ",{}],["}",{"fg":2}],["                                                                        ",{}]],"20":[["        mm := cluster.NewMM(corpus, len(gold.Labels), .1, .1)                    ",{}]],"21":[["        inferencer := cluster.NewMMGibbs(mm)                                     ",{}]],"22":[["        for i := 0; i < 20; i++ {                                                ",{}]],"23":[["jlund3@savant:modelt$ clear                                                      ",{}]],"24":[["                                                                                 ",{}]]},"cursor":{"x":0}}],[0.005332,{"lines":{"0":[["jlund3@savant:modelt$                                                            ",{}]],"1":[["                                                                                 ",{}]],"2":[["                                                                                 ",{}]],"3":[["                                                                                 ",{}]],"4":[["                                                                                 ",{}]],"5":[["                                                                                 ",{}]],"6":[["                                                                                 ",{}]],"7":[["                                                                                 ",{}]],"8":[["                                                                                 ",{}]],"9":[["                                                                                 ",{}]],"10":[["                                                                                 ",{}]],"11":[["                                                                                 ",{}]],"12":[["                                                                                 ",{}]],"13":[["                                                                                 ",{}]],"14":[["                                                                                 ",{}]],"15":[["                                                                                 ",{}]],"16":[["                                                                                 ",{}]],"17":[["                                                                                 ",{}]],"18":[["                                                                                 ",{}]],"19":[["                                                                                 ",{}]],"20":[["                                                                                 ",{}]],"21":[["                                                                                 ",{}]],"22":[["                                                                                 ",{}]],"23":[["                                                                                 ",{}]]},"cursor":{"x":22,"y":0}}],[0.178393,{"lines":{"0":[["jlund3@savant:modelt$ l                                                          ",{}]]},"cursor":{"x":23}}],[0.09575400000000001,{"lines":{"0":[["jlund3@savant:modelt$ ls                                                         ",{}]]},"cursor":{"x":24}}],[0.072952,{"cursor":{"x":0,"y":1}}],[0.004491,{"lines":{"1":[["data",{"fg":6,"bold":true}],["  ",{}],["eval",{"fg":4,"bold":true}],["  LICENSE  main.go  ",{}],["model",{"fg":4,"bold":true}],["  ",{}],["pipeline",{"fg":4,"bold":true}],["  README.md  ",{}],["run",{"fg":4,"bold":true}],["  ",{}],["util",{"fg":4,"bold":true}],["              ",{}]],"2":[["jlund3@savant:modelt$                                                            ",{}]]},"cursor":{"x":22,"y":2}}],[1.122801,{"lines":{"2":[["jlund3@savant:modelt$ g                                                          ",{}]]},"cursor":{"x":23}}],[0.047773,{"lines":{"2":[["jlund3@savant:modelt$ go                                                         ",{}]]},"cursor":{"x":24}}],[0.328167,{"lines":{"2":[["jlund3@savant:modelt$ g                                                          ",{}]]},"cursor":{"x":23}}],[0.151743,{"lines":{"2":[["jlund3@savant:modelt$                                                            ",{}]]},"cursor":{"x":22}}],[0.135926,{}],[0.168054,{"lines":{"2":[["jlund3@savant:modelt$ v                                                          ",{}]]},"cursor":{"x":23}}],[0.039962,{"lines":{"2":[["jlund3@savant:modelt$ vi                                                         ",{}]]},"cursor":{"x":24}}],[0.112005,{"lines":{"2":[["jlund3@savant:modelt$ vim                                                        ",{}]]},"cursor":{"x":25}}],[0.056003,{"cursor":{"x":26}}],[0.151933,{"lines":{"2":[["jlund3@savant:modelt$ vim m                                                      ",{}]]},"cursor":{"x":27}}],[0.119935,{"lines":{"2":[["jlund3@savant:modelt$ vim ma                                                     ",{}]]},"cursor":{"x":28}}],[0.184907,{"lines":{"2":[["jlund3@savant:modelt$ vim main.go                                                ",{}]]},"cursor":{"x":34}}],[0.327796,{"cursor":{"x":0,"y":3}}],[0.419798,{"lines":{"0":[["                                                                                 ",{}]],"1":[["▽                                                                                ",{}]],"2":[["                                                                                 ",{}]]},"cursor":{"y":0}}],[0.0009549999999999999,{"lines":{"24":[["\"main.go\" 67L, 1529C                                                            ",{"fg":253,"bg":234}],[" ",{}]]},"cursor":{"x":20,"y":24,"visible":false}}],[0.151541,{}],[1.303077,{"lines":{"0":[["»   »   ",{"fg":239,"bg":234}],["panic",{"fg":110,"bg":234}],["(err)                                                              ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"1":[["»   ",{"fg":239,"bg":234}],["}                                                                           ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"2":[["                                                                                ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"3":[["»   ",{"fg":239,"bg":234}],["return",{"fg":110,"bg":234}],[" corpus                                                               ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"4":[["}                                                                               ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"5":[["                                                                                ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"6":[["func",{"fg":110,"bg":234}],[" main() {                                               ",{"fg":253,"bg":234}],["                     ",{}]]},"cursor":{"x":60,"y":6}}],[0.007126,{"lines":{"6":[["func",{"fg":110,"bg":234}],[" main() {                                                                   ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"7":[["»   ",{"fg":239,"bg":234}],["rand.Seed(time.Now().UnixNano())                                            ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"8":[["»   ",{"fg":239,"bg":234}],["corpus := GetCorpus()                                                       ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"9":[["»   ",{"fg":239,"bg":234}],["gold := eval.NewClusteringIndex(",{"fg":253,"bg":234}],["\"data/enron/annotation.tab\"",{"fg":150,"bg":234}],[")                ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"10":[["»   ",{"fg":239,"bg":234}],["gold2 := eval.NewClusteringIndexRef(                                        ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"11":[["»   »   ",{"fg":253,"bg":233}],["\"data/enron/annotation.tab\"",{"fg":150,"bg":233}],[",                                             ",{"fg":253,"bg":233}]],"12":[["»   »   ",{"fg":239,"bg":234}],["\"data/enron/maildir\"",{"fg":150,"bg":234}],[",                                                   ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"13":[["»   »   ",{"fg":239,"bg":234}],["corpus)                                                                 ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"14":[["»   ",{"fg":239,"bg":234}],["fail := ",{"fg":253,"bg":234}],["false",{"fg":110,"bg":234}],["                                                               ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"15":[["»   ",{"fg":239,"bg":234}],["for",{"fg":110,"bg":234}],[" d := ",{"fg":253,"bg":234}],["0",{"fg":116,"bg":234}],["; d < corpus.M; d++ {                                             ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"16":[["»   »   ",{"fg":239,"bg":234}],["fmt.Printf(",{"fg":253,"bg":234}],["\"%s %s %s\"",{"fg":150,"bg":234}],[", corpus.Titles[d], gold.Data[d], gold2.Data[d])   ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"17":[["»   »   ",{"fg":239,"bg":234}],["if",{"fg":110,"bg":234}],[" gold.Data[d] != gold2.Data[d] {                                      ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"18":[["»   »   »   ",{"fg":239,"bg":234}],["fail = ",{"fg":253,"bg":234}],["true",{"fg":110,"bg":234}],["                                                         ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"19":[["»   »   »   ",{"fg":239,"bg":234}],["fmt.Print(",{"fg":253,"bg":234}],["\" *****************\"",{"fg":150,"bg":234}],[")                                     ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"20":[["»   »   ",{"fg":239,"bg":234}],["}                                                                       ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"21":[["»   »   ",{"fg":239,"bg":234}],["fmt.Println()                                                           ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"22":[["»   ",{"fg":239,"bg":234}],["}                                                                           ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"23":[["main.go [GO][Git(master)]                                      40,9           63%",{"fg":254,"bg":237,"bold":true}]]},"cursor":{"x":8,"y":11,"visible":true}}],[0.492617,{"lines":{"24":[["\"main.go\" 67L, 1529C                                                  -         ",{"fg":253,"bg":234}],[" ",{}]]}}],[0.120002,{"lines":{"24":[[":                                                                               ",{"fg":253,"bg":234}],[" ",{}]]},"cursor":{"x":1,"y":24,"visible":false}}],[0.000357,{"lines":{"0":[["jlund3@savant:modelt$ ls                                                         ",{}]],"1":[["data",{"fg":6,"bold":true}],["  ",{}],["eval",{"fg":4,"bold":true}],["  LICENSE  main.go  ",{}],["model",{"fg":4,"bold":true}],["  ",{}],["pipeline",{"fg":4,"bold":true}],["  README.md  ",{}],["run",{"fg":4,"bold":true}],["  ",{}],["util",{"fg":4,"bold":true}],["              ",{}]],"2":[["jlund3@savant:modelt$ vim main.go                                                ",{}]],"3":[["                                                                                 ",{}]],"4":[["                                                                                 ",{}]],"5":[["                                                                                 ",{}]],"6":[["                                                                                 ",{}]],"7":[["                                                                                 ",{}]],"8":[["                                                                                 ",{}]],"9":[["                                                                                 ",{}]],"10":[["                                                                                 ",{}]],"11":[["                                                                                 ",{}]],"12":[["                                                                                 ",{}]],"13":[["                                                                                 ",{}]],"14":[["                                                                                 ",{}]],"15":[["                                                                                 ",{}]],"16":[["                                                                                 ",{}]],"17":[["                                                                                 ",{}]],"18":[["                                                                                 ",{}]],"19":[["                                                                                 ",{}]],"20":[["                                                                                 ",{}]],"21":[["                                                                                 ",{}]],"22":[["                                                                                 ",{}]],"23":[["                                                                                 ",{}]],"24":[["                                                                                 ",{}]]},"cursor":{"x":0,"y":4,"visible":true}}],[4.846731,{"lines":{"4":[["^C                                                                               ",{}]]},"cursor":{"x":2}}],[0.013285,{"lines":{"4":[["^Cexit status 2                                                                  ",{}]],"6":[["shell returned 1                                                                 ",{}]],"8":[["Interrupt: Press ENTER or type command to continue                               ",{}]]},"cursor":{"x":50,"y":8}}],[0.798326,{"lines":{"0":[["                                                                                 ",{}]],"1":[["                                                                                 ",{}]],"2":[["                                                                                 ",{}]],"4":[["                                                                                 ",{}]],"6":[["                                                                                 ",{}]],"8":[["                                                                                 ",{}]]}}],[0.009786000000000001,{"lines":{"0":[["»   »   ",{"fg":239,"bg":234}],["panic",{"fg":110,"bg":234}],["(err)                                                              ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"1":[["»   ",{"fg":239,"bg":234}],["}                                                                           ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"2":[["                                                                                ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"3":[["»   ",{"fg":239,"bg":234}],["return",{"fg":110,"bg":234}],[" corpus                                                               ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"4":[["}                                                                               ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"5":[["                                                                                ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"6":[["func",{"fg":110,"bg":234}],[" main() {                                                                   ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"7":[["»   ",{"fg":239,"bg":234}],["rand.Seed(time.Now().UnixNano())                                            ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"8":[["»   ",{"fg":239,"bg":234}],["corpus := GetCorpus()                                                       ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"9":[["»   ",{"fg":239,"bg":234}],["gold := eval.NewClusteringIndex(",{"fg":253,"bg":234}],["\"data/enron/annotation.tab\"",{"fg":150,"bg":234}],[")                ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"10":[["»   ",{"fg":239,"bg":234}],["gold2 := eval.NewClusteringIndexRef(                                        ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"11":[["»   »   ",{"fg":253,"bg":233}],["\"data/enron/annotation.tab\"",{"fg":150,"bg":233}],[",                                             ",{"fg":253,"bg":233}]],"12":[["»   »   ",{"fg":239,"bg":234}],["\"data/enron/maildir\"",{"fg":150,"bg":234}],[",                                                   ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"13":[["»   »   ",{"fg":239,"bg":234}],["corpus)                                                                 ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"14":[["»   ",{"fg":239,"bg":234}],["fail := ",{"fg":253,"bg":234}],["false",{"fg":110,"bg":234}],["                                                               ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"15":[["»   ",{"fg":239,"bg":234}],["for",{"fg":110,"bg":234}],[" d := ",{"fg":253,"bg":234}],["0",{"fg":116,"bg":234}],["; d < corpus.M; d++ {                                             ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"16":[["»   »   ",{"fg":239,"bg":234}],["fmt.Printf(",{"fg":253,"bg":234}],["\"%s %s %s\"",{"fg":150,"bg":234}],[", corpus.Titles[d], gold.Data[d], gold2.Data[d])   ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"17":[["»   »   ",{"fg":239,"bg":234}],["if",{"fg":110,"bg":234}],[" gold.Data[d] != gold2.Data[d] {                                      ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"18":[["»   »   »   ",{"fg":239,"bg":234}],["fail = ",{"fg":253,"bg":234}],["true",{"fg":110,"bg":234}],["                                                         ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"19":[["»   »   »   ",{"fg":239,"bg":234}],["fmt.Print(",{"fg":253,"bg":234}],["\" *****************\"",{"fg":150,"bg":234}],[")                                     ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"20":[["»   »   ",{"fg":239,"bg":234}],["}                                                                       ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"21":[["»   »   ",{"fg":239,"bg":234}],["fmt.Println()                                                           ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"22":[["»   ",{"fg":239,"bg":234}],["}                                                                           ",{"fg":253,"bg":234}],[" ",{"fg":253,"bg":233}]],"23":[["main.go [GO][Git(master)]                                      40,9           63%",{"fg":254,"bg":237,"bold":true}]],"24":[["                                                                                ",{"fg":253,"bg":234}],[" ",{}]]},"cursor":{"x":8,"y":11}}],[0.610644,{}],[0.068581,{"cursor":{"visible":false}}],[0.303417,{"lines":{"0":[["jlund3@savant:modelt$ ls                                                         ",{}]],"1":[["data",{"fg":6,"bold":true}],["  ",{}],["eval",{"fg":4,"bold":true}],["  LICENSE  main.go  ",{}],["model",{"fg":4,"bold":true}],["  ",{}],["pipeline",{"fg":4,"bold":true}],["  README.md  ",{}],["run",{"fg":4,"bold":true}],["  ",{}],["util",{"fg":4,"bold":true}],["              ",{}]],"2":[["jlund3@savant:modelt$ vim main.go                                                ",{}]],"3":[["                                                                                 ",{}]],"4":[["^Cexit status 2                                                                  ",{}]],"5":[["                                                                                 ",{}]],"6":[["shell returned 1                                                                 ",{}]],"7":[["                                                                                 ",{}]],"8":[["Interrupt: Press ENTER or type command to continue                               ",{}]],"9":[["                                                                                 ",{}]],"10":[["                                                                                 ",{}]],"11":[["                                                                                 ",{}]],"12":[["                                                                                 ",{}]],"13":[["                                                                                 ",{}]],"14":[["                                                                                 ",{}]],"15":[["                                                                                 ",{}]],"16":[["                                                                                 ",{}]],"17":[["                                                                                 ",{}]],"18":[["                                                                                 ",{}]],"19":[["                                                                                 ",{}]],"20":[["                                                                                 ",{}]],"21":[["                                                                                 ",{}]],"22":[["                                                                                 ",{}]],"23":[["                                                                                 ",{}]],"24":[["                                                                                 ",{}]]},"cursor":{"x":0,"y":9,"visible":true}}],[0.003142,{"lines":{"9":[["jlund3@savant:modelt$                                                            ",{}]]},"cursor":{"x":22}}],[0.424731,{"lines":{"9":[["jlund3@savant:modelt$ c                                                          ",{}]]},"cursor":{"x":23}}],[0.079802,{"lines":{"9":[["jlund3@savant:modelt$ cl                                                         ",{}]]},"cursor":{"x":24}}],[0.096123,{"lines":{"9":[["jlund3@savant:modelt$ cle                                                        ",{}]]},"cursor":{"x":25}}],[0.087946,{"lines":{"9":[["jlund3@savant:modelt$ clea                                                       ",{}]]},"cursor":{"x":26}}],[0.071883,{"lines":{"9":[["jlund3@savant:modelt$ clear                                                      ",{}]]},"cursor":{"x":27}}],[0.128671,{"cursor":{"x":0,"y":10}}],[0.003132,{"lines":{"0":[["jlund3@savant:modelt$                                                            ",{}]],"1":[["                                                                                 ",{}]],"2":[["                                                                                 ",{}]],"4":[["                                                                                 ",{}]],"6":[["                                                                                 ",{}]],"8":[["                                                                                 ",{}]],"9":[["                                                                                 ",{}]]},"cursor":{"x":22,"y":0}}],[0.572376,{"lines":{"0":[["jlund3@savant:modelt$ exit                                                       ",{}]]},"cursor":{"x":0,"y":1}}]]